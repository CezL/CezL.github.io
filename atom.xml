<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>C</title>
  
  <subtitle>Make more time.</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-01-14T09:22:01.394Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Cez</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://example.com/2022/01/14/test/"/>
    <id>http://example.com/2022/01/14/test/</id>
    <published>2022-01-14T10:58:05.514Z</published>
    <updated>2022-01-14T09:22:01.394Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20220114172154.jpg" alt="7d89f3d7ly1gte2e6r91hj23gp2alqv6"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/Cezzz/image2_repo/raw/master/img/20220114172154.jpg&quot; alt=&quot;7d89f3d7ly1gte2e6r91hj23gp2alqv6&quot;&gt;&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2022/01/14/%E7%BA%BF%E6%80%A7%E6%97%B6%E9%97%B4Selection/"/>
    <id>http://example.com/2022/01/14/%E7%BA%BF%E6%80%A7%E6%97%B6%E9%97%B4Selection/</id>
    <published>2022-01-14T09:47:26.510Z</published>
    <updated>2021-11-16T02:44:32.183Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Randomized-DivideConquer"><a href="#Randomized-DivideConquer" class="headerlink" title="Randomized DivideConquer"></a>Randomized DivideConquer</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">R</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Randomized-DivideConquer&quot;&gt;&lt;a href=&quot;#Randomized-DivideConquer&quot; class=&quot;headerlink&quot; title=&quot;Randomized DivideConquer&quot;&gt;&lt;/a&gt;Randomized Div</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2022/01/14/Lecture04-Classification/"/>
    <id>http://example.com/2022/01/14/Lecture04-Classification/</id>
    <published>2022-01-14T09:47:26.368Z</published>
    <updated>2021-11-03T14:33:37.422Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>在Classification这件事中，我们要找的是一个function，它的input是object x，它的output的是它输入哪一个class。这样的task有很多的application：    </p><ul><li><p>credit scoring</p><ul><li><p>Input: income, savings, profession, age, past financial </p><p>history </p></li><li><p>Output: accept or refuse</p></li></ul></li><li><p>Medical Dignosis</p><ul><li><p>Input: current symptoms, age, gender, past medical </p><p>history …</p></li><li><p>Output: which kind of diseases</p></li></ul></li><li><p>Handwritten character recognition</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211103193708905.png" alt="image-20211103193708905"></p></li><li><p>Face recgonition</p><ul><li>input：image of a face,output:person</li></ul></li></ul></li></ul><h1 id="Example-Application"><a href="#Example-Application" class="headerlink" title="Example Application"></a>Example Application</h1><p>pokemon有18种属性，我们要做的是一个分类问题，这个问题是找一个function，input某一支pokemon，output是这一支pokemon属于哪一个type。</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211103193751314.png" alt="image-20211103193751314"></p><ul><li><p>第一个问题是如何把一个pokemon当做一个function的input，想当成function的input，我们必须把它数值化。</p><p>一支宝可梦其实可以用一组数字来描述它的特性，如下图(黄色是皮卡丘对应的数值)</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211103193959257.png" alt="image-20211103193959257"></p><p>所以一支宝可梦，我们就可以<strong>用一个7个数字所组成的vector来描述它</strong></p></li></ul><p>  Can we predict the “type” of pokemon based on the information?</p><h1 id="How-to-do-Classification"><a href="#How-to-do-Classification" class="headerlink" title="How to do Classification?"></a>How to do Classification?</h1><ul><li><p>Training data for Classification</p><p>$(x^1,\hat y^1)$</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211103194331457.png" alt="image-20211103194331457"></p></li></ul><ul><li><p>Classification as Regression?</p><p>我们以binary classification当做一个例子：</p><p>Training: Class 1 means the target is 1; Class 2 means the target is -1</p><p>Testing: closer to 1 → class 1; closer to -1 → class 2</p></li></ul><ul><li><p>如果我们今天用一个linear的model，真的找出来$b,w_1,w_2$，那我们会发现说$b+w_1x_1+w_2x_2$等于$0$的线是下图绿色的这一条。这在左图中看起来还是蛮不错的；</p></li><li><p>但是我们可能会遇到糟糕的问题：假设我们今天Class1的分布不是左边这样。</p></li><li><p>我们考虑右图Class1的分布：如果我们用绿色的线所代表的model：左上角的output<0，右下角的output>0；绿色的线会有什么问题呢？越偏右下,它的值是远大于1的；所以用绿色的这个model做regression的时候，右下角的这些点output是远大于1的。<strong>但是如果我们用regression的话我们会希望蓝色的点越接近1越好。</strong>所以对于regression来说，这些远大于1的点是error的，是不好的。</p></li><li><p>虽然我们用眼睛直接看绿色这条线是比较好的，但是如果我们硬用regression做下去的话，其实会得到的是紫色这一条；因为model会觉得说，我把绿色的线往右偏一点，最右下角的蓝色的点的值就不会那么大了，会稍微接近1，对regression来说是比较好的function。但是这样减小了error，对classification来说却是很糟糕的，所以regression对model好坏的定义对classification是不适用的。</p><p><strong>Regression penalize to the examples that are “too correct”</strong></p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211103194634211.png" alt="image-20211103194634211"></p></li><li><p>Multiple class: Class 1 means the target is 1; Class 2 means the target is 2; Class 3 means the target is 3 …… problematic;但是这样是有问题的，因为这样做的时候我们就假设了Class3和Class2是比较近的，Class2和Class1是比较近的，他们有某种关系，但是如果实际上这种关系并不存在的话，这样子当做regression处理，就没办法得到一个好的结果。</p></li></ul><h1 id="Ideal-Alternatives"><a href="#Ideal-Alternatives" class="headerlink" title="Ideal Alternatives"></a>Ideal Alternatives</h1><h2 id="Function-Model"><a href="#Function-Model" class="headerlink" title="Function(Model)"></a>Function(Model)</h2><p>在Regression的时候，我们找一个function，它的output是real number；</p><p>在Classification的时候，function的output是discrete的。想办法让model做到这件事情，一个可能的想法是：</p><p>假如是binary classification，在我们要找的function $f$中内建一个function  $g$，当然我们希望$g$也是根据training data被找出来的；如果$g(x)&gt;0$，那就说$x$是class1，否则就是class2</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211103201317669.png" alt="image-20211103201317669"></p><h2 id="Loss-function"><a href="#Loss-function" class="headerlink" title="Loss function"></a>Loss function</h2><p>那么在training的时候，如何定义我们的Loss呢？</p><p>The number of times f get incorrect results on training data。</p><p>$\displaystyle L(f)=\sum_n \delta(f(x^n)\ne \hat y^n)$</p><h2 id="Find-the-best-function"><a href="#Find-the-best-function" class="headerlink" title="Find the best function"></a>Find the best function</h2><p>Example: Perceptron, SVM(截止目前先不讲</p><p>先讲另一个solution，这个solution也是跟ML的三个步骤是一样的，首先用概率的观点来看它。</p><h1 id="Two-Boxes"><a href="#Two-Boxes" class="headerlink" title="Two Boxes"></a>Two Boxes</h1><p>Given一个蓝球，它是从Box1中来的概率：</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211103201934162.png" alt="image-20211103201934162"></p><h1 id="Two-Classes"><a href="#Two-Classes" class="headerlink" title="Two Classes"></a>Two Classes</h1><ul><li><p>Two Boxes这个example和分类有什么关系呢？如果我们把盒子换成分类的话，把Box1和Box2换成类别1和类别2，这时候给我们一个x，它从某一个class里面sample出来的概率是多少呢？</p><p>我们需要知道从class1里面抽出一个$x$的概率$P(C_1)$，从class2抽出一个$x$的概率$P(C_2)$；要知道从class1里面抽一个x时，抽出的是我们现在考虑的这个x的概率$P(x|C_1)$；从class1里面抽一个x时，抽出的是我们现在考虑的这个x的概率$P(x|C_2)$</p><p>如果有上面4个数值，那我们就能计算出$x$是从class1抽出来的概率$P(C_1|x)$</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211103203352743.png" alt="image-20211103203352743"></p><p>所以现在的问题是，如果我们知道这4个数值，问题就解决了，给我一个宝可梦x，我们就可以看，它从哪一个class来的概率最大，概率最大的class就是正确答案</p><p>但是现在问题是如果我们要算$P(C_1|x)$，我们就要算4个值，这4个值怎么来呢？<strong>我们就希望从我们的training data，把这4个值估算出来。</strong></p><p>这一整套的想法，就叫做Generative Model </p><p>为什么叫generative model？因为有这个model，我们就可以拿它来generate一个x：我们可以计算某一个x出现的概率，如果我们可以计算每一个x出现的概率，我们就知道x的distribution，就可以用这个distribution来产生x，sample x出来。这个概率是什么呢？就是$𝑃(𝑥) = 𝑃 (𝑥|𝐶1) 𝑃 (𝐶_1) + 𝑃 (𝑥|𝐶_2) 𝑃 (𝐶_2)$</p></li></ul><h1 id="Prior"><a href="#Prior" class="headerlink" title="Prior"></a>Prior</h1><p>首先来算一下$P(C_1)$和$P(C_2)$。</p><p>假设我们今天考虑的两个class分别是water和normal。class1指的就是water系的宝可梦，normal指的就是normal的宝可梦；(其他16种先无视掉</p><p>Water and Normal type with ID &lt; 400 for training, rest for testing</p><p>Training: 79 Water, 61 Normal</p><p>很显然，根据training data：$P(C1 ) = 79 / (79 + 61) =0.56$，$P(C2 ) = 61 / (79 + 61) =0.44$</p><h2 id="Probability-from-Class"><a href="#Probability-from-Class" class="headerlink" title="Probability from Class"></a>Probability from Class</h2><p>怎么计算给我某一个class，某一支未知的宝可梦是从这个class sample出来的概率$P(x|C_1)=?$</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211103204805317.png" alt="image-20211103204805317"></p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211103204321162.png" alt="image-20211103204321162"></p><p>很疑惑的一点是：我们的training data里面没有这个宝可梦啊，那从这个class sample出来这支宝可梦的概率不应该是0吗</p><p>我们首先考虑，<strong>Each Pokémon is represented as a vector by its attribute.</strong> </p><p>(一堆的feature)</p><h2 id="Probability-from-Class-Feature"><a href="#Probability-from-Class-Feature" class="headerlink" title="Probability from Class - Feature"></a>Probability from Class - Feature</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在Classification这件事中，我们要找的是一个function，它的input是object x，它的output的是它输入哪一个class。这样的task有很多的application：    &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;credit s</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Lecture03:Gradient Descent</title>
    <link href="http://example.com/2021/10/31/Lecture03-Gradient-Descent/"/>
    <id>http://example.com/2021/10/31/Lecture03-Gradient-Descent/</id>
    <published>2021-10-31T11:31:41.000Z</published>
    <updated>2021-11-02T05:42:43.255Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在Lecture01中，已经大致知道Gradient Descent是怎么做的了，但是有一些小技巧等需要详细说明，使得我们的Gradient Descent能做得更好。</p></blockquote><h1 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h1><ul><li><p>In step 3, we have to solve the following optimization problem:</p><p>$\theta^*=arg \underset{\theta}minL(\theta),L:Loss Function,\theta:parameters$</p></li><li><p>假设现在$\theta$有两个variables:$\{\theta_1,\theta_2\}$</p><p><strong>Randomly</strong> start at $\theta_0=\begin{bmatrix} \theta^0_1 \\ \theta^0_2  \end{bmatrix}$，这个vector中每个component的上标表示它在Gradient Descent中参数更新的次数；下标表示这是这一组参数里面的第几个component。$\triangledown L(\theta)$就是Gradient。</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211031201821735.png" alt="image-20211031201821735" style="zoom:50%;" /></p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211031201951694.png" alt="image-20211031201951694"></p></li><li><p>Visualize：</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211031220046440.png" alt="image-20211031220046440"></p></li></ul><h1 id="Tip1-Tunning-your-learning-rate"><a href="#Tip1-Tunning-your-learning-rate" class="headerlink" title="Tip1:Tunning your learning rate"></a>Tip1:Tunning your learning rate</h1><ul><li>有的时候，learning rate调的不好很有可能让我们找不到best function </li></ul><p>$\displaystyle \theta^i=\theta^{i-1}-\eta \triangledown L(\theta^{i-1})$</p><ul><li><p>如果我们的learning rate调的刚刚好，那么从左边开始，顺着红色的箭头，很顺利就走到最低点；</p><ul><li><p>但是如果learning rate调小了，会沿着蓝色的箭头走的很慢。虽然给它enough time它终究能走到local minimum的地方，但是如果它太慢的话，我们可能会没办法接受；</p></li><li><p>如果learning rate调大了，比如像绿色的arrow，它的步伐太大了，它永远没有办法走到特别低的地方，而是永远在山谷口振荡；也可能调得更大，像黄色的arrow，直接飞出去了，Loss越来越大。</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211101195345501.png" alt="image-20211101195345501" style="zoom:50%;" /></p></li></ul></li></ul><p>  ​         只有在参数是一位或者二维的时候，我们才能visualize上图；但是如果我们有多维参数时，我们是不能这样visualize的。 但是<strong>我们总可以visualize的是：每次参数update的时候，Loss的改变情形</strong>;如果我们的learning rate调的很小，那loss下降非常非常慢；如果learning rate调得太大的话，Loss可能很快地下降，但是很快就卡住了，对应于图中的绿色的线；如果调得更大，可能就直接飞出去了。</p><p>  <img src="D:/typora%E5%9B%BE%E7%89%87/image-20211101195728927.png" alt="image-20211101195728927" style="zoom:50%;" /></p><ul><li>调整learning rate是很麻烦的，有没有自动的方法可以帮我们调learning rate呢？</li></ul><h2 id="Adaptive-Learning-Rates"><a href="#Adaptive-Learning-Rates" class="headerlink" title="Adaptive Learning Rates"></a>Adaptive Learning Rates</h2><ul><li>Popular &amp; Simple Idea: Reduce the learning rate by some factor every few epochs.(learning rate会随着参数的update越来越小)<ul><li>At the <strong>beginning</strong>, we are <strong>far from the destination</strong>, so we use larger learning rate</li><li>After <strong>several epochs</strong>, we are <strong>close to the destination</strong>, so we reduce the learning rate</li><li>E.g. 假如我们今天的learning rate是一个依赖于t的函数，depend on现在参数update的次数，在第t次update参数的时候，learning rate可以设成$\displaystyle 𝜂^𝑡 = \frac{𝜂}{\sqrt{t+1}}$，这样随着参数update次数越多，learning rate就会越来越小。  <ul><li>但是光这样是不够的，我们需要<strong>因材施教</strong>，最好的状况应该是<strong>每一个不同的参数，我们都给它不同的learning rate</strong>，这件事情有很多的小技巧，其中实操最简单的是Adagrad。</li></ul></li></ul></li></ul><h2 id="Adagrad"><a href="#Adagrad" class="headerlink" title="Adagrad"></a>Adagrad</h2><h3 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h3><ul><li><p>Divide the learning rate of each parameter by the <strong>root mean square of its previous derivatives</strong>$</p><blockquote><p>Root Mean Square:$\displaystyle M=\sqrt{\frac{\sum_{i=1}^{n}x_i^2}{n}}$</p></blockquote></li><li><p>因为我们现在考虑的是adaptive的learning rate，所以对每一个不同的参数，都有不同的learning rate，<strong>下面所举的$w$不再是一组参数，而是一个参数</strong></p><p>$\displaystyle 𝜂^𝑡 = \frac{𝜂}{\sqrt{t+1}},g^{t+1}=\frac{\partial L(\theta^t)}{\partial w}$</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211101201007187.png" alt="image-20211101201007187"></p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211101201332076.png" alt="image-20211101201332076"></p><p>我们发现$\eta^t$和$\sigma^t$中都有$\sqrt{t+1}$，所以可以消掉，得到最后的learning rate$\displaystyle \frac{\eta}{\sqrt{\sum_{i=0}^t(g^i)^2}}$。所以我们在写Adagrad的式子时，不需要把time depedent的这件事情explicitly写出来。</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211101201518222.png" alt="image-20211101201518222"></p></li></ul><h3 id="Contradiction"><a href="#Contradiction" class="headerlink" title="Contradiction?"></a>Contradiction?</h3><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211101202219676.png" alt="image-20211101202219676"></p><p>我们都知道，在做gradient descent的时候，参数下降的速度取决于两件事：learning rate和gradient；gradient告诉我们说，gradient越大，我们的步子就越大；但是adagrad中分母项却告诉我们说，gradient越大，我们的步子就越小；那这两项不就矛盾了吗？</p><h3 id="Intuitive-Reason"><a href="#Intuitive-Reason" class="headerlink" title="Intuitive Reason"></a>Intuitive Reason</h3><ul><li><p>有一些paper是这样解释的：Adagrad它想要考虑的是：这个Gradient有多Surprise(反差)。</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211101202550872.png" alt="image-20211101202550872"></p><p>为了强调图中特别大和特别小这种反差的效果，所以在Adagrad里面，就除以过去gradient的平方；我们想要知道过去gradient有多大，然后再把它们相除，看看反差有多大；这是intuitive的解释</p></li></ul><h3 id="Formal-Reason"><a href="#Formal-Reason" class="headerlink" title="Formal Reason"></a>Formal Reason</h3><h4 id="One-parameter"><a href="#One-parameter" class="headerlink" title="One parameter:"></a>One parameter:</h4><p>考虑一个二次函数$y=ax^2+bx+c$</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211101202853373.png" alt="image-20211101202853373" style="zoom:50%;" /></p><p>如果我们要在这个二次函数上随机选一个点开始做Gradient Descent，我们的步伐踏出去多大是最好的？(假设初始点为$x_0$，最低点是$-\frac{b}{2a}$);很显然，Best step是$|x_0+\frac{b}{2a}|$，因为踏这么长的时候我们可以一步到位的。我们可以看到踏出去的步伐是跟微分的大小成正比的，但是这件事情是只有在只考虑一个参数时成立的，跨参数比较时就不见得成立了。</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211101202918910.png" alt="image-20211101202918910"></p><h4 id="More-parameter"><a href="#More-parameter" class="headerlink" title="More parameter"></a>More parameter</h4><p>如果我们今天同时有好几个参数时：Grandient值越大，该点与最低点的距离就越远这一件事就就不一定成立了。</p><p>我们现在考虑$w_1$和$w_2$两个参数，分别考虑$w_1$和$w_2$(蓝色和绿色)，当然，分别比较$w_1$和$w_2$时，上述结论仍然是成立的($a&gt;b$,$c&gt;d$)。</p><p>但是如果我们比较$a$和$c$两个点，虽然$c$这个点对$w_2$的微分值是比较大的，但是c离最低点是比较近的。所以当我们update参数时如果仅是跟微分成正比，这件事情才是成立的；当我们要同时考虑好几个参数时，就要考虑其他的了。</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211101204438773.png" alt="image-20211101204438773"></p><ul><li><p>我们发现在分母上还有一个$2a$，而$x$对$y$的二次微分就是$2a$,它出现在最好的step的分母的地方，所以<strong>最好的step不仅要正比于一次微分，它同时要和二次微分的大小成反比。</strong></p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211101204840254.png" alt="image-20211101204840254"></p><p>所以如果我们把二次微分考虑进来的话，在$w_1$这个方向上，弧是比较平滑的，二次微分是比较小的；在$w_2$的方向上，弧是比较尖的，二次微分是比较大的。所以我们只比较a和c的微分值是不够的；还要除掉各自的二次微分。<strong>只有这样我们才能真正显示这些点跟最低点的距离。</strong></p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211101204956733.png" alt="image-20211101204956733"></p></li></ul><p>这件事情和Adagrad有什么关系呢？  </p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211101205218773.png" alt="image-20211101205218773"></p><p>在Adagrad式子中，$\eta$是一个constant，暂且按下不表，$g^t$是一次微分，而<strong>下面分母这一项可以代表的是二次微分的估计</strong>；我们当然可以直接算二次微分，但是这样会增加计算量，有时参数量大的时候计算时间难以接受。我们直接用之前算过的gradient，可以不增加额外的运算，同时还能估测一下二次微分的值。</p><p>Use <em>first derivative</em> to estimate <em>second derivative</em></p><p>我们考虑二次微分比较大和比较小两种情形：接着再把一次微分考虑进来</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211101205600179.png" alt="image-20211101205600179"></p><p>如果我们只是在各自区间sample一个点算微分的话，我们看不出来它的二次微分的值是多少，但是如果我们sample够多的点，那我们就会发现，在蓝色的比较平滑的峡谷里，它的一次微分通常是比较小的；而在绿色比较尖的峡谷里，一次微分通常是比较大的。而adagrad中sum前面的gradient，就可以看作是sample。</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211101205637986.png" alt="image-20211101205637986"></p><h1 id="Tip2-Stochastic-Gradient-Descent-SGD"><a href="#Tip2-Stochastic-Gradient-Descent-SGD" class="headerlink" title="Tip2:Stochastic Gradient Descent(SGD)"></a>Tip2:Stochastic Gradient Descent(SGD)</h1><ul><li><p><strong>SGD make the training faster</strong></p></li><li><p>以前讨论的Gradient Descent我们都是每次考虑所有的training data，这是理所当然的，我们的Loss当然要看所有的example是什么样子</p></li><li><p>但是SGD的思想是：我们每次就随机地看一笔data，Loss也不是summation over所有的data，而是只看这一笔data的Loss。update参数的时候就直接根据这个example算出来的gradient来update。</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211101211652193.png" alt="image-20211101211652193"></p><blockquote><p>$L^n$表示只考虑$x^n$这一笔data的Loss。</p></blockquote></li></ul><p>实际操作：</p><p>假设我们有20个example，左图是看完所有example之后 update一次，当然它是按照gradient建议我们的方向update的，但是右边SGD同样的起始点，在左边更新一次时，它可以更新20次。</p><p>所以如果只看一个example的时候它的步伐是小的，而且可能是散的；因为我们每次只考虑一个example，所以它参数update的方向不见得跟total loss的error surface建议我们的方向一致，但是因为我们可以看很多example，天下武功唯快不破，所以反而SGD是更快的。</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211102132315149.png" alt="image-20211102132315149"></p><h1 id="Tip3-Feature-Scaling"><a href="#Tip3-Feature-Scaling" class="headerlink" title="Tip3:Feature Scaling"></a>Tip3:Feature Scaling</h1><p>假设我们现在input的feature有两个：$y=b+w_1x_1+w_2x_2$</p><p>如果$x_1$和$x_2$分布的range很不一样的话，那建议做feature scaling把它们的range分布变成一样。</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211102132730151.png" alt="image-20211102132730151"></p><h2 id="Why"><a href="#Why" class="headerlink" title="Why?"></a>Why?</h2><p>假如$x_1$的input一般都比较小，$x_2$的input一般都比较大</p><p>如果我们更动$w_1$和$w_2$的值，比如都加$\triangle w$，我们会发现$w_1$的变化，对y的变化而言是比较小的；$w_2$的变化对y的变化而言是比较大的。</p><p>这件事是很合理的，因为$w_1$和$w_2$还要分别乘input，这时候我们把error surface画出来时如下图：$w_1$对y影响比较小，所以$w_1$方向上，Loss surface比较平滑；$w_2$对y影响比较大，所以$w_2$方向上loss surface是比较sharp的。</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211102133313017.png" alt="image-20211102133313017"></p><p>如果$x_1$和$x_2$的scale是接近的，那么loss surface就会接近圆形。</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211102133446101.png" alt="image-20211102133446101"></p><p>这对Gradient Descent有什么影响呢？</p><ul><li>长椭圆这样的error surface，如果不用adagrad这些方法是很难搞定的，因为在不同的方向上需要区别很大的learning rate。所以update参数是比较难的</li><li>但是如果做了feature scaling，update参数就会比较容易；而且正圆不管按照哪个点，都会向最低点走(圆心)</li></ul><h2 id="How？"><a href="#How？" class="headerlink" title="How？"></a>How？</h2><p><img src="D:/typora%E5%9B%BE%E7%89%87/image-20211102133754610.png" alt="image-20211102133754610"></p><p><a href="https://baike.baidu.com/item/总体标准差/3861969">标准差</a>：(Standard deviation)</p><p><img src="D:/typora%E5%9B%BE%E7%89%87/2cd758dbf5d20a735d7967be514e9c3a.svg" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在Lecture01中，已经大致知道Gradient Descent是怎么做的了，但是有一些小技巧等需要详细说明，使得我们的Gradient Descent能做得更好。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;Review&quot;&gt;&lt;a hr</summary>
      
    
    
    
    <category term="机器学习" scheme="http://example.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>Lecture02:What does the error come from?</title>
    <link href="http://example.com/2021/10/30/Lecture02-What-does-the-error-come-from/"/>
    <id>http://example.com/2021/10/30/Lecture02-What-does-the-error-come-from/</id>
    <published>2021-10-30T01:10:35.000Z</published>
    <updated>2021-10-30T03:04:50.034Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h1><ul><li><p>A more complex model does not always lead to better performance on <strong>testing data.</strong> </p></li><li><p>error有两个来源，一个是bias(偏向、偏离)，一个是variance(方差、变化幅度)</p></li><li><p>如果我们可以诊断我们error的来源，我们就可以挑选适当的方法来improve我们的model</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211030105524.png" alt="image-20211030091142312" style="zoom:67%;" /></p></li></ul><h1 id="Estimator"><a href="#Estimator" class="headerlink" title="Estimator"></a>Estimator</h1><ul><li><p>在Lecture01中，我们找一个funciton，input是一个pokemon，output是它进化后的cp值，理论上一定有一个最优的function，我们写作$\hat f$；显然对于pokemon，只有Niantic公司知道hh。</p></li><li><p>我们只能从training data中找到一个$f^<em>$，这个$f^</em>$是对$\hat f$的一个estimator</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211030105525.png" alt="image-20211030091612543" style="zoom:50%;" /></p></li></ul><h2 id="Bias-and-Variance-of-Estimator"><a href="#Bias-and-Variance-of-Estimator" class="headerlink" title="Bias and Variance of Estimator"></a>Bias and Variance of Estimator</h2><ul><li><p>先考虑概率论与统计中的知识：</p><ul><li><p>Estimate the mean of a variable $x$</p><ul><li>assume the mean of x is 𝜇 </li><li>assume the variance of x is $𝜎^2$</li></ul></li><li><p>Estimator of mean $μ$</p><ul><li><p>Sample N points:$\{x^1,x^2,\dots,x^N\}$，即我们随机取样N个点，然后取它们的平均值$m$，很大的可能是m并不会等于μ，但是我们可以继续做实验，取$m_1,m_2,…,m_6$等，则有$E[m]=μ$;所以就算我们今天找很多m，它们都不和μ一样，但是它们的期望值是正好等于μ的。所以用m来estimate μ，它是unbiased的。</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211030105526.png" alt="image-20211030092913060" style="zoom:50%;" /></p><blockquote><p>就比如我们打靶，我们瞄准的是准心，但是由于其他风速等因素的干扰，所以我们打的点会散布在准心的周围。</p></blockquote><p>$\displaystyle m=\frac{1}{N}\sum_nx^n\ne μ$ ，</p><p>$\displaystyle E[m]=E[\frac{1}{N}\sum_nx^n]=\frac{1}{N}\sum_nE[x^n]=μ$</p></li></ul></li></ul></li></ul><pre><code>- 散布在周围会散布得多开呢？这取决于Variance;而Variance取决于我们今天sample的值，如果我们取N很大的话，它的散布比较集中，如果只取比较少的N的话，它的散布就比较开  $\displaystyle Var[m]=\frac&#123;\sigma^2&#125;&#123;N&#125;$  &lt;img src=&quot;https://gitee.com/Cezzz/image2_repo/raw/master/img/20211030105527.png&quot; alt=&quot;image-20211030092645986&quot; style=&quot;zoom:50%;&quot; /&gt;</code></pre><ul><li><p>Estimator of variance $\sigma^2$</p><ul><li><p>Sample N points:$\{x^1,x^2,\dots,x^N\}$</p><p>$\displaystyle m=\frac{1}{N}\sum_nx^n$ </p><p>$\displaystyle s^2=\frac{1}{N}\sum_n(x^n-m)^2$</p><p><strong>Biased</strong> <strong>estimator</strong>。如果我们取期望的话我们发现$E[s^2]\ne\sigma^2$，但是如果我们的N取很大的话，那$\sigma^2$与$s^2$的估测间的误差就比较小</p><p>$\displaystyle E[s^2]=\frac{N-1}{N}\sigma^2\ne \sigma^2$</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211030105528.png" alt="image-20211030093409899" style="zoom:50%;" /></p></li></ul></li></ul><h1 id="问题回到Regression上："><a href="#问题回到Regression上：" class="headerlink" title="问题回到Regression上："></a>问题回到Regression上：</h1><p>以图中第四个点为例，我们现在要估测的是靶的中心，即$\hat f$；我们collect一些data，做一次实验，我们找出来的$f^*$在如图位置；error取决于两件事：</p><ul><li><strong>第一件事是我们瞄准的位置在哪里</strong>，就是说我们的estimator是不是bias的。怎么知道是不是bias的呢？假设我们可以做好多次实验，它们的散布是这些蓝色的点，我们把期望值算出来，$E[f^<em>]=\bar f$;<em>*所以我们的estimator和靶心之间是有一段距离的，这就是Bias</em></em>，我们瞄的时候就没有瞄准  </li><li>还有一个error是，我们瞄准了$\bar f$，但是<strong>子弹射出去后还是会有偏移的</strong>，所以每次找到的$f^<em>$是不一样的，**而$f</em>与期望值\bar f$之间的距离就是variance**。</li></ul><p>所以最理想的情况是我们同时没有bias，variance又比较小。</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211030105529.png" alt="image-20211030093527647"></p><ul><li><p>但是经过上节课的学习我们知道，其实我们就做了一次实验，收集了10笔data，得到一个$f^<em>$，然后就结束了，我们怎么得到很多的$f^</em>$呢？怎么知道variance和bias有多大呢？</p><ul><li><p>Parallel Universe </p><p>假设有Parallel Universe，我们在每一个Parallel Universe中都抓Pokemon做实验。</p><ul><li>In all the universes, we are collecting (catching) 10 Pokémons as training data to find $f^*$</li></ul><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211030105530.png" alt="image-20211030094520266" style="zoom:67%;" /></p><ul><li><p>In different universes, we use the same model, but obtain different $𝑓^*$，假设model都是$y=b+w\cdot x_{cp}$</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211030105531.png" alt="image-20211030094657274" style="zoom:67%;" /></p></li></ul></li><li><p>$f^*$ in 100 Universes（其实真正要做的话就是每次抓10只不同pokemon，然后做100次实验，怎么会有parallel universe呢）</p><p>model是$y=b+w\cdot x_{cp}$:</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211030105532.png" alt="image-20211030094842692" style="zoom:50%;" /></p><p>model是$y = b + w_1\cdot x_{cp} + w_2\cdot  (x_{cp})^2 + w_3\cdot (x_{cp})^3$：</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211030105533.png" alt="image-20211030094954695" style="zoom:50%;" /></p><p>model是$y = b + w_1\cdot x_{cp} + w_2\cdot  (x_{cp})^2 + w_3\cdot (x_{cp})^3+w_4\cdot (x_{cp})^4+w_5\cdot (x_{cp}^5)$：</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211030105534.png" alt="image-20211030095053560" style="zoom:50%;" /></p></li></ul></li></ul><h2 id="Variance"><a href="#Variance" class="headerlink" title="Variance"></a>Variance</h2><ul><li>对于简单的Model，如只考虑一次的Model，它是比较集中的，如果考虑五次的话，它的散布就非常地广；所以对于简单的Model，它的Variance是比较小的；就好像说我们在射击的时候，每次射击的位置都是差不多的，每次找出来的直线，最好的function $f^*$都是差不多的。</li><li>但是对于复杂的Model，它的散布是比较开的，它的Variance是比较大的  </li></ul><ul><li><p>为什么简单的Model会有Small Variance，复杂的Model会有Large Variance呢？   </p><p><strong>简单的model它比较不会受到data的影响</strong>，我们考虑最极端的情况，model是$f(x)=c$，这时候就算我们随便找多少个pokemon，它通通都是一样的，variance=0；随着model越来越复杂，variance就越来越大。</p></li></ul><h2 id="Bias"><a href="#Bias" class="headerlink" title="Bias"></a>Bias</h2><p>​        $E[f^*]=\bar f$</p><ul><li><p>Bias:If we average all the $f^*$，is it close to $\hat f$？ </p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211030105535.png" alt="image-20211030095716059" style="zoom:50%;" /></p><p>因为我们并不知道在pokemon这个例子中的$\hat f$，所以就假设一个</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211030105536.png" alt="image-20211030095826578" style="zoom:50%;" /></p></li></ul><p>下图按照从上到下、从左到右的顺序为：一次式、三次式、五次式的情况</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211030105537.png" alt="image-20211030095927222"></p><ul><li><p>所以如果是一个比较简单的model，它有比较大的bias；一个复杂的model，虽然它每次找出来的$f^*$都不一样，但它有比较小的bias。</p><ul><li><p>为什么会这样呢？我们说一个model就是一个function set，那我们就用一个范围来表示function set，当我们定下来一个model的时候，我们就已经设定好了：我们最好的function就只能从function set中挑选出来。</p><p>当我们用一次式的时候，model的范围是比较小的，可能target压根不在范围里；用五次式的时候，model范围是比较大的，所以因为training data太少，training data每次都不一样，所以每次的$f^*$都不一样，但是它们都是散布在target附近的，所以平均起来就可以得到$\bar f$接近于target。</p></li></ul><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211030105538.png" alt="image-20211030100208247"></p></li></ul><h2 id="Bias-vs-Variance"><a href="#Bias-vs-Variance" class="headerlink" title="Bias vs Variance"></a>Bias vs Variance</h2><p> 随着我们挑选的model越来越复杂，bias越来越小，但是variance会越来越大，我们要做的就是找到一个平衡点，bias和variance都合适。    </p><p><strong>如果bias很大 这就是$Underfitting$</strong></p><p><strong>如果variance很大 这就是$Overfitting$</strong></p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211030105539.png" alt="image-20211030100711802"></p><h2 id="What-to-do-with-large-bias"><a href="#What-to-do-with-large-bias" class="headerlink" title="What to do with large bias?"></a>What to do with large bias?</h2><ul><li><p>Diagnosis:</p><ul><li><p>如果我们的model没有办法fit我们的training data,那就说明我们的bias是大的，此时就是Underfitting。</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211030105540.png" alt="image-20211030100958074" style="zoom: 80%;" /></p></li><li><p>如果我们可以fit我们的training data，但是在testing data上却有很大的error，那么很有可能variance比较大，造成了overfitting。</p></li></ul></li><li><p>如果bias很大，redesign我们的model！因为我们的model中可能不包含target。</p><ul><li>Add more features as input</li><li>A more complex model</li></ul><p>我们可能会说，那我们可以collect更多data啊，但这是没用的，因为我们的function set就很烂啦，再找更多data也不会有帮助.</p></li></ul><h2 id="What-to-do-with-large-variance"><a href="#What-to-do-with-large-variance" class="headerlink" title="What to do with large variance?"></a>What to do with large variance?</h2><ul><li><p>More data</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211030105541.png" alt="image-20211030103243050"></p><p>增加data是一个很有效控制variance的办法，它也不会伤害bias，但是问题是我们在实际中不一定能collect更多data。但是可以自己人为做data augmentation;比如在影像辨识中，可以做rotate等操作。</p></li><li><p>Regularization </p><p>使curve更加平滑，但是可能会伤害bias，因为我们调整了function space，只包含那些平滑的曲线，所以可能$\hat f$不在function set中。</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211030105542.png" alt="image-20211030103633280"> </p></li></ul><h1 id="Model-Selection"><a href="#Model-Selection" class="headerlink" title="Model Selection"></a>Model Selection</h1><ul><li>There is usually a trade-off between bias and variance.</li><li><p>Select a model that balances two kinds of error to minimize total error</p></li><li><p>What we should not do：</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211030105543.png" alt="image-20211030104020089">    </p><p>就是说我们有training set和testing set，接下来我们有model1、model2、model3，在training set上我们可以分别找到一个best funciton，它在testing set上对应error值，model3的error最小；</p><p>但是可能的问题是：这个testing set是我们手头上的testing set，它并不是真正的testing set(比如我们把cp值预测系统放到网络上给大家用，新进来的data是从来没有看过的) 。</p><p>所以我们拿testing set来选这个最好的model的时候，它在真正的testing set上不一定是最好的model。手头上的这个testing set是有bias的(这里老师并没有解释地很清楚，我的理解是 它与traing set是有一定关系的，没有办法真实反映出在实际中发生的状况。。) </p></li></ul><ul><li><p>拿Homework来举例</p><p>我们手上有Training set和testing set。其中public set是可以看到的，private set是看不到的。</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211030105544.png" alt="image-20211030104541102"></p></li></ul><p>怎么做才是可靠的呢？    </p><p>↓</p><h1 id="Cross-Validation"><a href="#Cross-Validation" class="headerlink" title="Cross Validation"></a>Cross Validation</h1><ul><li><p>我们可以把training set分为两组，一组training set，真正用来train model；另一组validation set用来选model。这样我们train出一个最好的model，比如是model3；但是我们可能感觉这样的话training data变少了，我们可以这样做：我们已经决定model3是最好的model，那我们就定住用model3，但是用全部的data在model3再train一次。</p></li><li><p>这时候如果我们把model3 apply到testing set(public)上，虽然error&gt;0.5，比较大，但是这时候才能真正反映出在private set上的error。</p></li><li><p>不推荐的是用public set上的error表现再返回去搞Model，因为这样的话我们又把public set中的bias考虑进去了。这样就变成我们在public set中的performance没办法反映private set了。 </p></li></ul><p>如果说这个validation set也有怪怪的bias，我们可以用N-fold Cross Validation</p><h1 id="N-fold-Cross-Validation"><a href="#N-fold-Cross-Validation" class="headerlink" title="N-fold Cross Validation"></a>N-fold Cross Validation</h1><p>如果我们不相信某一次train跟test的结果的话，我么就分很多种不同的情形</p><p>比如我们做3-fold的cross validation，意思就是我们把training set分成3份，每一次拿其中一份当做validation set，另外两份做training；</p><p>然后我们在三种情形下，三个model通通算error，最后算average error，最后得到的average error最小的model1，用model1再在整个的trainging set上train一遍，然后再去test在testing set上。</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211030110013.png" alt="image-20211030105904182"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Review&quot;&gt;&lt;a href=&quot;#Review&quot; class=&quot;headerlink&quot; title=&quot;Review&quot;&gt;&lt;/a&gt;Review&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A more complex model does not always lead to </summary>
      
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Lecture01 Additional:Regression Demo</title>
    <link href="http://example.com/2021/10/29/Lecture01-Additional-Regression-Demo/"/>
    <id>http://example.com/2021/10/29/Lecture01-Additional-Regression-Demo/</id>
    <published>2021-10-29T14:21:26.000Z</published>
    <updated>2021-10-29T15:04:49.332Z</updated>
    
    <content type="html"><![CDATA[<p>一个简单的两个参数的<code>Gradient Descent</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="comment">#y_data = b+w*x_data</span></span><br><span class="line"><span class="comment">#我们造10个data</span></span><br><span class="line">x_data = [<span class="number">338.</span>,<span class="number">333.</span>,<span class="number">328.</span>,<span class="number">207.</span>,<span class="number">226.</span>,<span class="number">25.</span>,<span class="number">179.</span>,<span class="number">60.</span>,<span class="number">208.</span>,<span class="number">606.</span>]</span><br><span class="line">y_data = [<span class="number">640.</span>,<span class="number">633.</span>,<span class="number">619.</span>,<span class="number">393.</span>,<span class="number">428.</span>,<span class="number">27.</span>,<span class="number">193.</span>,<span class="number">66.</span>,<span class="number">226.</span>,<span class="number">1591.</span>]</span><br><span class="line"></span><br><span class="line">x = np.arange(-<span class="number">200</span>,-<span class="number">100</span>,<span class="number">1</span>) <span class="comment">#bias</span></span><br><span class="line">y = np.arange(-<span class="number">5</span>,<span class="number">5</span>,<span class="number">0.1</span>) <span class="comment">#weight</span></span><br><span class="line">Z = np.zeros((<span class="built_in">len</span>(x),<span class="built_in">len</span>(y)))</span><br><span class="line">X,Y = np.meshgrid(x,y)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(x)):</span><br><span class="line">  <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(y)):</span><br><span class="line">    b = x[i]</span><br><span class="line">    w = y[j]  </span><br><span class="line">    Z[j][i] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(x_data)):</span><br><span class="line">      Z[j][i] = Z[j][i] + (y_data[n] - b - w*x_data[n])**<span class="number">2</span>     </span><br><span class="line">    Z[j][i] = Z[j][i]/<span class="built_in">len</span>(x_data)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">b = -<span class="number">120</span> <span class="comment"># initial b</span></span><br><span class="line">w = -<span class="number">4</span> <span class="comment"># initial w</span></span><br><span class="line">lr = <span class="number">0.00000001</span> <span class="comment">#learning rate</span></span><br><span class="line">iteration = <span class="number">100000</span> <span class="comment">#iterator的次数为100000次</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Store initial values for plotting   </span></span><br><span class="line">b_history=[b]</span><br><span class="line">w_history=[w]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Iterations</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(iteration):</span><br><span class="line">  b_grad = <span class="number">0.0</span></span><br><span class="line">  w_grad = <span class="number">0.0</span></span><br><span class="line">  <span class="comment"># 这里其实就是在计算梯度，根据得到的公式 和式求和就是下面这个iteration.</span></span><br><span class="line">  <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(x_data)):</span><br><span class="line">    b_grad += - <span class="number">2.0</span>*(y_data[n]-b-w*x_data[n])*<span class="number">1.0</span></span><br><span class="line">    w_grad += - <span class="number">2.0</span>*(y_data[n]-b-w*x_data[n])*x_data[n]</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Update parameters </span></span><br><span class="line">  b = b - lr * b_grad</span><br><span class="line">  w = w - lr * w_grad</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Store parameters for plotting</span></span><br><span class="line">  b_history.append(b)</span><br><span class="line">  w_history.append(w)  </span><br><span class="line"></span><br><span class="line"><span class="comment"># plot the figure</span></span><br><span class="line">plt.contourf(x,y,Z,<span class="number">50</span>,alpha=<span class="number">0.5</span>,cmap=plt.get_cmap(<span class="string">&#x27;jet&#x27;</span>))</span><br><span class="line">plt.plot([-<span class="number">188.4</span>],[<span class="number">2.67</span>],<span class="string">&#x27;x&#x27;</span>,ms=<span class="number">12</span>,markeredgewidth=<span class="number">3</span>,color=<span class="string">&#x27;orange&#x27;</span>)    <span class="comment">#(假设我们知道最优解在w=2.67,b=-188.4的位置)   </span></span><br><span class="line">plt.plot(b_history,w_history,<span class="string">&#x27;o-&#x27;</span>,ms=<span class="number">3</span>,lw=<span class="number">1.5</span>,color=<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">plt.xlim(-<span class="number">200</span>,-<span class="number">100</span>)</span><br><span class="line">plt.ylim(-<span class="number">5</span>,<span class="number">5</span>)</span><br><span class="line">plt.xlabel(<span class="string">r&#x27;$b$&#x27;</span>,fontsize=<span class="number">16</span>)</span><br><span class="line">plt.ylabel(<span class="string">r&#x27;$w$&#x27;</span>,fontsize=<span class="number">16</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>最后得到的可视化图如下，我们看到在learning rate= 0.00000001时，虽然经过了100000次迭代，但是最终的w和b离最优点还是比较远，我们可以考虑加大learning rate，如0.000001，可以看到离最优更近了，如果继续加大，0.00001，我们期望它是好的，但是很遗憾，它烂掉了。</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029225746.png" alt="image-20211029225745545" style="zoom:50%;" /></p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029230447.png" alt="image-20211029225953053" style="zoom:50%;" /></p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029230448.png" alt="image-20211029230055431" style="zoom:50%;" /></p><p>我们发现很难得到最好的w和b</p><p>解决办法:$Adagrad$,关于$Adagrad$,后续再聊。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一个简单的两个参数的&lt;code&gt;Gradient Descent&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/spa</summary>
      
    
    
    
    <category term="机器学习" scheme="http://example.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>Lecture01:Regression - Case Study</title>
    <link href="http://example.com/2021/10/29/Regression-Case-Study/"/>
    <id>http://example.com/2021/10/29/Regression-Case-Study/</id>
    <published>2021-10-29T00:00:58.000Z</published>
    <updated>2021-10-29T14:17:28.082Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Regression"><a href="#Regression" class="headerlink" title="Regression"></a>Regression</h1><p><strong>Regression:Output is a scalar!!</strong></p><ul><li><p>Stock Market Forecast</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029093607.png" alt="image-20211029080440931"></p></li><li><p>Self-driving Car </p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029093608.png" alt="image-20211029080448435"></p></li><li><p>Recommendation</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029093609.png" alt="image-20211029080453640"></p></li></ul><h1 id="Example-Application"><a href="#Example-Application" class="headerlink" title="Example Application"></a>Example Application</h1><blockquote><p>经典Hung-yi Lee宝可梦</p></blockquote><p>Estimating the Combat Power(CP) of a pokemon after evolution</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029080734.png" alt="image-20211029080733259"></p><p> $x表示一只宝可梦，x_{cp}是它的name,x_w是weight,x_h是height,x_{cp}进化前的cp值$。</p><p>输入一个$x$,输出进化后的$cp$值   </p><h1 id="Step1-Model-Function-Set"><a href="#Step1-Model-Function-Set" class="headerlink" title="Step1 Model(Function Set)"></a>Step1 Model(Function Set)</h1><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029093610.png" alt="image-20211029081140466"></p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029093611.png" alt="image-20211029081837262"></p><p>假设我们先随便写一个function set：$y=b+w·x_{cp}$  </p><p>其中w and  b  are parameters.(can  be any  value)  </p><script type="math/tex; mode=display">\begin{array}\ f_1:y=10.0+9.0·x_{cp}\\f_2:y=9.8+9.2·x_{cp}\\f_3:y=-0.8-1.2·x_{cp}\\...infinite\end{array}</script><p>我们可以有像上面一样无穷多的functin。有一些function显然不太可能是正确的，如$f_3$，这就是我们要靠<code>training data</code>来排除的。</p><p>$形如y=b+\sum w_ix_i$的function set称为<strong>Linear Model</strong>.  </p><blockquote><p>$x_i$:an attribute of input x，叫作<strong>feature</strong></p><p>$w_i$:weight,$b$:bias</p></blockquote><h1 id="Step2-Goodness-of-Function"><a href="#Step2-Goodness-of-Function" class="headerlink" title="Step2 Goodness of Function"></a>Step2 Goodness of Function</h1><p>接下来要做的就是收集training data，来衡量我们function的好坏</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029093612.png" alt="image-20211029083122557" style="zoom:33%;" /></p><blockquote><p>用上标来表示一个完整的object的编号，例如$x^1$就是第一个data</p><p>用y来表示function的output，用上标来表示一个完整的object的编号；hat表示真实、正确的值；</p><p>因为这里是linear model，output是一个scalar，所以这里的$\hat y^1$是一个数值，未来structured learning可能$y$是一个vector，有$\hat y^1_{1}\ \ \hat y^1_{2} \dots$,下标表示一个object的component.</p></blockquote><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029093613.png" alt="image-20211029082102698" style="zoom:50%;" /></p><ul><li><p>Hung-yi Lee的traing data是10 pokemons(因为李老师说抓一只很麻烦hh)。   </p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029093614.png" alt="image-20211029082510590" style="zoom:50%;" /></p><p>可视化：</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029093615.png" alt="image-20211029082605412"></p></li></ul><h2 id="Loss-Function"><a href="#Loss-Function" class="headerlink" title="Loss Function"></a>Loss Function</h2><p>我们需要一个东西来看看我们找的function有多好或者多不好，所以我们定义一个<strong>Loss function</strong> L,它的input是一个function，output的数值表示我们input的这个function有多不好。</p><ul><li><p>因为f是由b和w决定的，所以$L(f)=L(w,b)$，所以我们就可以说，Loss function就是衡量一组参数b和w的好坏</p><p>我们用training data，即已经获得的data，来代入这个function，就是说如果我们用这个function来预测它进化后的cp值。$\hat y$是真正的数值，二者相减就是估测的误差Estimation error,最后我们把10笔data sum over.    </p><script type="math/tex; mode=display">\displaystyle\sum_{i=1}^{10}(\hat y^n-(b+w·x^i_{cp}))^2</script></li></ul><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029093616.png" alt="image-20211029083621069"></p><ul><li><p>接下来，我们已经定好了我们的Loss function，可以衡量我们function set中每一个function的好坏，那现在我们要做的就是<strong>从function set里面挑选一个最好的function</strong> ，我们用$f^<em>,w^</em>,b^*$来表示最好的$f,w,b$。我们看看哪一个function，也就是哪一个b和w可以让Loss最小</p><script type="math/tex; mode=display">\begin{align}f^*&=arg\ \underset{f}min L(f)，即\\w^*,b^*& =arg\ \underset{w,b}minL(w,b)\\&=arg\ \underset{w,b}min\sum_{i=1}^{10}(\hat y^n-(b+w·x^i_{cp}))^2 \end{align}</script></li></ul><p>怎么找到这一组最好的$w，b$呢？我超！$Gradient \ Descent！$</p><p>只要Loss function是可微分的，Gradient Descent都可以拿来处理这样的function，找到比较好的function或参数。</p><h1 id="Step3-Gradient-Descent"><a href="#Step3-Gradient-Descent" class="headerlink" title="Step3 Gradient Descent"></a>Step3 Gradient Descent</h1><h2 id="A-simple-example-with-one-parameter"><a href="#A-simple-example-with-one-parameter" class="headerlink" title="A simple example with one parameter"></a>A simple example with one parameter</h2><p>先从简单的来说：</p><ul><li><p>Consider loss function $L(w)$ with one parameter $w$(假设$L(w)$可微分)：</p><p>$w^*=arg\ \underset{w} minL(w)$</p></li></ul><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029093617.png" alt="image-20211029085910817"></p><p>我们显然可以一个个试$w$的值，从而找到一个最好的$w$，让loss最小，但是这样做没有任何效率可言。</p><p><strong>Gradient Descent</strong>：</p><ol><li><p>随机选取一个初始的值$w^0$</p></li><li><p>计算$\frac{dL}{dw}|_{w=w^0}$</p></li><li><p>如果计算出来的值小于0，则把$w^0$往右边移动increase w,否则decrease w；在我们这个例子中，我们往右跨一步</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029085151.png" alt="image-20211029085149070" style="zoom: 50%;" /></p><blockquote><p>$\eta$被称为<strong>learning rate</strong></p></blockquote><p>我们跨的这一步的大小取决于两件事：</p><ul><li>一是微分值：微分值越大，说明我们在一个越陡峭的地方，所以步长越大；</li><li>二是learning rate，它表明我们今天跨一步，不仅取决于微分值，还取决于它，这是一个我们事先确定的参数；如果learning rate设定的大，那学习的速度就比较快；否则就比较慢。</li></ul></li><li><p>$\frac{dL}{dw}|_{w=w^1}$</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029085638.png" alt="image-20211029085637209" style="zoom:50%;" /></p></li><li><p>$\dots$many iterations，假设经过T次更新，我们会到Local minima的地方(微分为0)，此时参数就没办法更新了，所以可能找不到global minima；但是这件事在linear regression上是没有这个问题的，它只有global minima，因为loss function是convex的。</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029085935.png" alt="image-20211029085934160"></p></li></ol><h2 id="How-about-two-parameters"><a href="#How-about-two-parameters" class="headerlink" title="How about two parameters?"></a>How about two parameters?</h2><script type="math/tex; mode=display"> w^*,b^* =arg\underset{w,b}minL(w,b)</script><p>其实这和只有一个参数的情形没有什么不同啦</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029093618.png" alt="image-20211029090643338"></p><p>$\triangledown L=\begin{bmatrix} \frac{\partial L}{\partial w} \\ \frac{\partial L}{\partial b} \end{bmatrix}$就是<strong>梯度Gradient</strong>。   </p><ul><li><p>visualize</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029091055.png" alt="image-20211029091053843"></p></li><li><p>Formulation of $\partial L/\partial w \ \text{and}\  \partial L/\partial b$</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029093619.png" alt="image-20211029091554906"></p></li></ul><h1 id="How-is-the-result"><a href="#How-is-the-result" class="headerlink" title="How is the result?"></a>How is the result?</h1><p>经过Gradient Descent，我们找到一组w和b</p><script type="math/tex; mode=display">y=b+w\cdot x_{cp}b=-188.4, w=2.7</script><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029093620.png" alt="image-20211029091955048" style="zoom:67%;" /></p><p>Average Error on Training Data:$\displaystyle \frac{1}{10}\sum_{n=1}^{10}e^n=31.9$，但是其实我们真正关心的是在new data(testing data)上的error是多少.于是我们抓来另外10只pokemon</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029093621.png" alt="image-20211029092112961" style="zoom:67%;" /></p><p>Average Error on Testing Data:$35.0$&gt;Average Error on Training Data ，这肯定是可以接受的，因为Loss就是基于trainng data来计算的。    </p><ul><li><p>如何做的更好呢？我们只能重新设计我们的model：我们看到在CP值很大和很小时，CP值的误差是比较大的。</p><ul><li><p>挑选另外一个model：  $\displaystyle y=b+w_1\cdot x_{cp}+w_2\cdot (x_{cp})^2$</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029093622.png" alt="image-20211029092740711"></p></li></ul></li><li><p>我们可以看到此时在training data和testing data上，误差都有所下降。能不能做得更好呢？我们可以试着加$x_{cp}^3$</p><p>$\displaystyle y=b+w_1\cdot x_{cp}+w_2\cdot (x_{cp})^2+w_3\cdot (x_{cp})^3$</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029093623.png" alt="image-20211029092718912" style="zoom:67%;" /></p><p>​    可以看到此时的误差只下降了一点点</p></li><li><p>继续考虑$x^4$</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029093624.png" alt="image-20211029092831037"></p><p>我们换了一个更复杂的model，在traning data上它给我们一个更低的error，但是testing data上的error反而更高了</p></li><li><p>考虑$x^5$</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029093625.png" alt="image-20211029092853986"></p></li></ul><h2 id="Model-Selection"><a href="#Model-Selection" class="headerlink" title="Model Selection"></a>Model Selection</h2><p>在Training Data上，我们看到Average Error是越来越小的，这件事情是非常合理的，因为我们每次把Model考虑得更复杂，加高次项的时候，更复杂的Model永远是包含前一个Model的；所以理论上我们考虑得越复杂，次数越高，Error rate在training data上就越低。</p><p>比如$y=b+w_1\cdot x_{cp}+w_2\cdot (x_{cp})^2$，当$w_2=0$时，它就是$y=b+w\cdot x_{cp}$</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029093626.png" alt="image-20211029093208348"></p><ul><li><p>但是事情在Testing data上就不是这样了。(橙色的是training data上的error)</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029221537.png" alt="image-20211029210524513" style="zoom:50%;" /></p></li></ul><p>虽然越复杂的model在training data上能给我们越好的结果，但是它并不一定能够在testing data上给我们好的结果，这件事情就是<strong>Overfitting</strong>。比如本例中的四次式和五次式。    </p><p>所以model不是越复杂越好，我们需要一个最适合的model，比如在本例中，我们选一个三次式的时候，可以给我们一个最低的error。   </p><h2 id="Let’s-collect-more-data"><a href="#Let’s-collect-more-data" class="headerlink" title="Let’s collect more data"></a>Let’s collect more data</h2><p>当我们收集到60只pokemon的时候，我们会发现他们的original CP和CP after evoluation之间有一种奇妙的关系，这种关系显然不是什么一次二次三次式可以描述的；中间有其他的力量(factor)在影响着他们</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029221659.png" alt="image-20211029210958142"></p><ul><li><p>what are the hidden factors?</p><p>当我们把pokemon的物种用不同颜色表示出来时，我们就很显然地知道，pokemon的物种也是有影响的。</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029221703.png" alt="image-20211029211241178"></p><p>所以刚才只考虑original CP显然是不对的，因为pokemon的物种的影响显然是很大的。所以我们刚才的model是不好的。</p></li></ul><h3 id="Back-to-step1-Redesign-the-Model"><a href="#Back-to-step1-Redesign-the-Model" class="headerlink" title="Back to step1. Redesign the Model"></a>Back to step1. Redesign the Model</h3><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029221706.png" alt="image-20211029211517556" style="zoom:50%;" /></p><ul><li><p>虽然我们把if放到了function里面，但是我们可以把它改写成linear Model：</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029221709.png" alt="image-20211029211712872"></p><ul><li>所以如果今天我们的input的$x_s=\text{Pidgey}$，则$y=b_1+w_1\cdot x_{cp}$</li></ul></li><li><p>经过改写，它就变成了Linear Model，可能看着有点不舒服，但是我们可以把$\delta (x_s=\text{Pidgey})x_{cp}、\delta (x_s=\text{Weedle})x_{cp}$等分别当做一个整体看，它就是每一个$x_i$，就是$feature$。</p></li></ul><ul><li><p>结果：</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029221712.png" alt="image-20211029212256851" style="zoom:50%;" /></p><ul><li><p>这几条线可以把traing data fit得更好，在training data上的average error是3.8</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029221714.png" alt="image-20211029212404137" style="zoom:50%;" /></p></li><li><p>在testing data上fit得也更好，average error是14.3  </p></li></ul></li><li><p>我们看到除了Eevee的预测fit得不是很好，其他物种fit得都还不错，虽然或多或少会有一点偏差，但是可能在产生CP值的时候会有一些random的值，也有可能有其他的factor。</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029221719.png" alt="image-20211029212635454"></p></li></ul><h3 id="Back-to-step1-Redesign-the-Model-again"><a href="#Back-to-step1-Redesign-the-Model-again" class="headerlink" title="Back to step1.Redesign the Model again"></a>Back to step1.Redesign the Model again</h3><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029221722.png" alt="image-20211029212752257"></p><p>理论上我们确实得到非常低的Training Error，但是它Overfitting了。</p><p>怎么办呢？如果我们有Domain knowledge的话，我们当然可以知道哪些input可能是没用的，可以delete，但是显然我们并不是大木博士hh，我们用别的方法！</p><ul><li><p><strong>Regularization</strong></p><p>我们redefine一下我们的Loss Function，把一些knowledge放进去，让我们可以找到好的function。假设我们的Model如下：</p><script type="math/tex; mode=display">\displaystyle\begin{array}{lcl}y=b+\sum{w_ix_i}   \\L=\sum_n(\hat y-(b+\sum{w_ix_i}))^2+\lambda \sum{w_i^2}\end{array}</script><p>L越小就代表是越好的function，那为什么我们期待一个参数接近0的function呢？当我们加上$\lambda \sum w_i^2$这一项时，我们希望$w_i$越小越好。</p><p>参数值接近0的function，它是比较平滑(smooth)的，当输入有变化的时候，它的output对输入的变化是比较不sensitive的。参数小就可以达到这样的效果。   </p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029213749.png" alt="image-20211029213748408" style="zoom:50%;" /></p><ul><li><p>为什么我们喜欢平滑的function？如果我们的input有noise，因为它对输入不敏感，所以noise对function的影响会小一点。</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211029214014.png" alt="image-20211029214013756"></p><ul><li>通过上面的图表我们可以看到，在$\lambda$越大的时候，Training data上的eroor会越大，这件事情其实是非常合理的，因为当$\lambda$越大的时候，Loss function就越倾向于考虑$w_i$本身的值而减少考虑我们的error；</li><li>有趣的是虽然Training data上的error越大，但是我们在Testing data上的eroor却反而可能会越小；这个结果也是合理的，我们喜欢平滑的function，它对noise比较不sensitive，所以增加$\lambda $的时候，它的performance会变好，但是如果太平滑的话，极端一点，最平滑的情况是一条水平线，它预测个der。。</li><li>所以我们就需要调整$\lambda$来决定我们function的平滑程度。比如上例中的$\lambda=100$。</li><li>在regularization中并没有加上b，因为bias这一项并不会影响function的平滑程度，仅仅是将function上下移动。所以我们不用考虑bias。</li></ul></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Regression&quot;&gt;&lt;a href=&quot;#Regression&quot; class=&quot;headerlink&quot; title=&quot;Regression&quot;&gt;&lt;/a&gt;Regression&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Regression:Output is a scalar!</summary>
      
    
    
    
    <category term="机器学习" scheme="http://example.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>Install jupyter notebook and some toolkits</title>
    <link href="http://example.com/2021/10/28/Install-jupyter-notebook-and-some-toolkits/"/>
    <id>http://example.com/2021/10/28/Install-jupyter-notebook-and-some-toolkits/</id>
    <published>2021-10-28T12:53:36.000Z</published>
    <updated>2022-01-14T10:47:16.549Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基于Ubuntu20-04安装ML、Jupyter等相关环境"><a href="#基于Ubuntu20-04安装ML、Jupyter等相关环境" class="headerlink" title="基于Ubuntu20.04安装ML、Jupyter等相关环境"></a>基于Ubuntu20.04安装ML、Jupyter等相关环境</h1><ul><li><p>首先update一下,更新软件列表，获取源的软件列表方便本地解决依赖与制作软件包获取列表。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211028210101.png" alt="image-20211028210100244"></p></li><li><p>装一些gcc等必要的编译器，方便开发</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install build-essential</span><br></pre></td></tr></table></figure></li><li><p>安装python</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python3.8</span><br></pre></td></tr></table></figure></li><li><p>安装<a href="https://docs.conda.io/en/latest/miniconda.html">miniconda</a></p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211028210332.png" alt="image-20211028210331619"></p><p>python3.8 linux的链接为:<a href="https://repo.anaconda.com/miniconda/Miniconda3-py38_4.10.3-Linux-x86_64.sh">https://repo.anaconda.com/miniconda/Miniconda3-py38_4.10.3-Linux-x86_64.sh</a></p></li></ul><p><code>wget https://repo.anaconda.com/miniconda/Miniconda3-py38_4.10.3-Linux-x86_64.sh</code></p><p>下载后执行脚本：<code>./Miniconda3-py38_4.10.3-Linux-x86_64.sh</code></p><p>如果<code>Permission Denied</code>，则需要给脚本增加执行权限</p><p><code>chmod +x Miniconda3-py38_4.10.3-Linux-x86_64.sh</code></p><blockquote><p>安装过程中需要确认协议、安装的目录、是否需要初始化等，根据需要自己决定即可。</p></blockquote><ul><li><p><code>bash</code>进入conda环境</p><p>使用<code>conda/miniconda</code>环境，默认进入的是<code>base环境</code></p></li></ul>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">conda env remove mllearn</span><br><span class="line"><span class="meta">#</span><span class="bash"> conda create -n &lt;envname&gt; &lt;python版本&gt;</span></span><br><span class="line">conda create -n mllearn python=3.8 pip </span><br><span class="line">conda activate mllearn</span><br></pre></td></tr></table></figure><p>  <img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211028211059.png" alt="image-20211028211058765"></p><p>  <img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211028212547.png" alt="image-20211028211132109"></p><ul><li><p>安装需要的包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install jupyter torch torchvision</span><br></pre></td></tr></table></figure></li><li><p>打开jupyter notebook:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">如果是root用户需要加--allow-root</span></span><br><span class="line"><span class="meta">#</span><span class="bash">如果在vscode中ssh的话,默认是跳转浏览器的，如果不想默认跳转可以加 --no-browser</span></span><br><span class="line">jupyter notebook --allow-root</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211028211637.png" alt="image-20211028211636736"></p><p>因为8889端口是远端服务器上的，访问不了，所以需要将端口映射到本地 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh -L8889:localhost:8889 user@IP</span><br><span class="line"></span><br><span class="line">conda activate mllearn</span><br><span class="line">jupyter notebook --allow-root --no-browser --port 8889</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211028212548.png" alt="image-20211028212205591"></p></li><li><p>如果有幻灯片格式的notebook，可以<code>pip install rise</code>安装rise这个插件，支持看幻灯片。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;基于Ubuntu20-04安装ML、Jupyter等相关环境&quot;&gt;&lt;a href=&quot;#基于Ubuntu20-04安装ML、Jupyter等相关环境&quot; class=&quot;headerlink&quot; title=&quot;基于Ubuntu20.04安装ML、Jupyter等相关环境&quot;&gt;</summary>
      
    
    
    
    <category term="机器学习" scheme="http://example.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="技术" scheme="http://example.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Leetcode455.分发饼干</title>
    <link href="http://example.com/2021/10/27/Leetcode455-%E5%88%86%E5%8F%91%E9%A5%BC%E5%B9%B2/"/>
    <id>http://example.com/2021/10/27/Leetcode455-%E5%88%86%E5%8F%91%E9%A5%BC%E5%B9%B2/</id>
    <published>2021-10-27T13:02:18.000Z</published>
    <updated>2021-10-27T13:32:11.020Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode-cn.com/problems/assign-cookies/">Leetcode455.分发饼干</a></p><ul><li><p>本题是一道简单的贪心题</p></li><li><p><strong>贪心策略</strong>：每次选择尺寸最小的饼干来满足最小胃口的孩子；</p><p>这样能够使得饼干的尺寸得到充分的利用，从而有更多孩子能吃上饼干。   </p></li><li><p>我们首先将数组g和s按升序排列。</p></li><li><p>使用双指针来遍历数组：</p><ul><li>对于当前的$g[i]$,我们扫描$s$，找到一个最小的$s[j]$，满足$g[i]\le s[j]$；</li><li>如果找不到，说明当前胃口值的孩子已经满足不了了，所以对于后面胃口更大的孩子就别想了；可以直接退出循环，直接返回当前可满足的孩子数。</li></ul></li></ul><ul><li><p>Java实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findContentChildren</span><span class="params">(<span class="keyword">int</span>[] g, <span class="keyword">int</span>[] s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>; </span><br><span class="line">        Arrays.sort(g);</span><br><span class="line">        Arrays.sort(s);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;g.length;i++)&#123;</span><br><span class="line">            <span class="keyword">while</span> (j&lt;s.length &amp;&amp; g[i]&gt;s[j])&#123;</span><br><span class="line">                j++;    </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (j==s.length) <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">//当g[i]&lt;=s[j]，说明存在s[j]满足该孩子的胃口</span></span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                sum++;</span><br><span class="line">                j++;  </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>只能说这确实是比较简单的贪心题。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/assign-cookies/&quot;&gt;Leetcode455.分发饼干&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;本题是一道简单的贪心题&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;贪心策略</summary>
      
    
    
    
    <category term="做题笔记" scheme="http://example.com/categories/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Intro to Machine Learning</title>
    <link href="http://example.com/2021/10/27/Intro-to-Machine-Learning/"/>
    <id>http://example.com/2021/10/27/Intro-to-Machine-Learning/</id>
    <published>2021-10-27T11:13:28.000Z</published>
    <updated>2021-10-27T11:59:37.714Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h1><p><strong>Machine Learning is finding a function automatically </strong>.   </p><p>​    Some examples:</p><ul><li><p>Speech Recognition</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211027195651.png" alt="image-20211027195553392"></p></li><li><p>Image Recognition</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211027195652.png" alt="image-20211027195601483"></p></li><li><p>Playing Go</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211027195653.png" alt="image-20211027195614301"></p></li><li><p>Dialogue System   </p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211027195654.png" alt="image-20211027195623464"></p></li></ul><h1 id="我们希望机器找出什么样的function？"><a href="#我们希望机器找出什么样的function？" class="headerlink" title="我们希望机器找出什么样的function？"></a>我们希望机器找出什么样的function？</h1><ul><li>The output of the function is a <strong>scalar</strong>—-&gt;<strong>Regression</strong> </li><li>The output of the function is <strong>yes or no (Pos or neg)</strong>—-&gt;<strong>Binary Classification</strong> </li><li>The output of the function:<strong>Class1,Class2,…,ClassN</strong>—-&gt;<strong>Multi-class Classification</strong> </li><li>机器学习不仅仅是像很多Document所说的那样只有Regression和Classification，它还包括<strong>Generation</strong>，就是让机器能够产生有结构的复杂东西(如句子、图片、翻译等)，拟人化的讲法：让机器去创造</li></ul><h1 id="怎么告诉机器我们要找什么样的function？"><a href="#怎么告诉机器我们要找什么样的function？" class="headerlink" title="怎么告诉机器我们要找什么样的function？"></a>怎么告诉机器我们要找什么样的function？</h1><h2 id="Supervised-Learning"><a href="#Supervised-Learning" class="headerlink" title="Supervised Learning"></a>Supervised Learning</h2><ul><li><p>我们需要给机器一些<code>Labeled Data</code>;我们把<strong>理想的正确的输出</strong>告诉机器，这叫做对资料做<code>Label</code>。     </p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211027195657.png" alt="image-20211027194853938"></p></li><li><p>在我们提供给机器有Label的资料后，机器需要能够评估一个function的好坏(Loss)。一般情况下Loss越小越好。</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211027192709.png" alt="image-20211027192708171"></p><p>接下来机器会自动找出Loss最低的function(当然需要我们给定一些寻找的方法)</p></li></ul><h2 id="Reinforcement-Learning"><a href="#Reinforcement-Learning" class="headerlink" title="Reinforcement Learning"></a>Reinforcement Learning</h2><ul><li><p>Supervised learning VS Reinforcement learning:</p><ul><li><p>Supervised </p><p>（对于每一步的情况，要明确告诉机器，下一步该怎么走)</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211027192958.png" alt="image-20211027192957316"></p></li><li><p>reinforcement</p><p>让机器自己和自己下，或者和别人下，当机器输或赢的时候有适当的reward，让机器自己去判断、学习。</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211027193007.png" alt="image-20211027193006820"></p></li></ul></li></ul><h2 id="Unsupervised-Learning"><a href="#Unsupervised-Learning" class="headerlink" title="Unsupervised Learning"></a>Unsupervised Learning</h2><ul><li>交给机器大量的data，但是这些data并没有做label，让机器去学习。</li></ul><h1 id="机器怎么找到我们要的function？"><a href="#机器怎么找到我们要的function？" class="headerlink" title="机器怎么找到我们要的function？"></a>机器怎么找到我们要的function？</h1><ul><li><p>S1：给定机器一个 <code>funtion的搜寻范围</code>；所谓的network architecture就是告诉机器一个搜寻范围。</p></li><li><p>S2：function的寻找方法：<code>Gradient Descent</code>。 </p></li></ul><h1 id="前沿研究"><a href="#前沿研究" class="headerlink" title="前沿研究"></a>前沿研究</h1><ul><li>Explainable AI：为什么AI能够奏效</li><li>Adversarial(敌对的) Attack：可能一个function可以在有noise的情况下工作的还不错，但是如果人为地去加一些很神奇的noise，小到人发现不了，机器一遇到这个noise就直接崩溃。   </li><li><p>Network compression(压缩，缩小)：今天很多的model都是很大的，有没有方法可以compress这些model，小到可以在嵌入式的设备中运行？</p></li><li><p>Anomaly Detection：比如今天我们有一个可以识别动物的分类器，但是我们把这个分类器放到线上，有人放一个植物的图片，那机器会硬把这个植物classify成一个动物；所以当分类器中出现怪怪的东西(anomaly),机器能不能知道自己不知道(哲学)。</p></li><li><p>Transfer Learning(Domain adversarial Learning)：有什么办法在测试资料与训练资料不一样的时候还有办法让机器学到一些东西。</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211027194253.png" alt="image-20211027194252451"></p></li><li><p>Meta Learning：让机器学习如何学习。因为机器是一个勤奋但是天资不佳的学生，所以需要让机器聪明一点。 </p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211027195656.png" alt="image-20211027194546724"></p></li><li><p>Life-long Learning：</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211027195655.png" alt="image-20211027195641598"></p><p>Life-Long Learning (终身学习), Continuous Learning, Never Ending Learning, Incremental Learning</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Intro&quot;&gt;&lt;a href=&quot;#Intro&quot; class=&quot;headerlink&quot; title=&quot;Intro&quot;&gt;&lt;/a&gt;Intro&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Machine Learning is finding a function automatical</summary>
      
    
    
    
    <category term="机器学习" scheme="http://example.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="技术" scheme="http://example.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>matplotlib.pyplot使用</title>
    <link href="http://example.com/2021/10/22/matplotlib-pyplot%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/2021/10/22/matplotlib-pyplot%E4%BD%BF%E7%94%A8/</id>
    <published>2021-10-22T09:23:55.000Z</published>
    <updated>2021-10-22T11:45:01.314Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>This note is just for beginners and learning english.the content is not very difficult and most of it can be found in the official website of matplotlib.</p></blockquote><h1 id="Intro-to-pyplot"><a href="#Intro-to-pyplot" class="headerlink" title="Intro to pyplot"></a>Intro to pyplot</h1><ul><li><a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.html#module-matplotlib.pyplot"><code>matplotlib.pyplot</code></a> is a collection of functions that make matplotlib work like MATLAB. Each <code>pyplot</code> function <strong>makes some change to a figure</strong>: e.g., creates a figure, creates a plotting area in a figure, plots some lines in a plotting area, decorates the plot with labels, etc.</li></ul><h1 id="Generating-visualizations-with-pyplot"><a href="#Generating-visualizations-with-pyplot" class="headerlink" title="Generating visualizations with pyplot"></a>Generating visualizations with pyplot</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.plot([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])   <span class="comment"># the 1-d array is the value of y</span></span><br><span class="line">plt.ylabel(<span class="string">&#x27;some numbers&#x27;</span>)</span><br><span class="line">plt.show()            </span><br></pre></td></tr></table></figure><blockquote><p>never forget to write <code>plt.show</code> to show the plot,otherwise it’s nothing you know.</p></blockquote><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211022194412.png" alt=""></p><ul><li>it is obvious that the x-axis ranges from 0-3 and the y-axis ranges from 1-4 since python’s array index is from 0.</li></ul><ul><li><code>plot</code> is a versatile(通用的，多方面的) function,and will <strong>take an arbitrary number of arguments.</strong>  <ul><li>plot x versus y</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.plot([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],[<span class="number">1</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">16</span>])</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211022182949.png" alt=""></p><h1 id="Formatting-the-style-of-the-plot"><a href="#Formatting-the-style-of-the-plot" class="headerlink" title="Formatting the style of the plot"></a>Formatting the style of the plot</h1><ul><li>For every x, y pair of arguments, there is an optional third argument which is the format string that indicates the color and line type of the plot. </li><li>The letters and symbols of the format string are from MATLAB, and you <strong>concatenate</strong> a color string with a line style string. </li><li>The default format string is ‘b-‘, which is a solid blue line. For example, to plot the above with red circles, you would issue</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">plt.plot([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], [<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>], <span class="string">&#x27;ro&#x27;</span>)</span><br><span class="line">plt.axis([<span class="number">0</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">20</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211022194413.png" alt=""></p><blockquote><p> <a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html#matplotlib.pyplot.plot">the plot documentation</a> have a complete list of line styles and format strings.</p></blockquote><ul><li><p>the <code>axis</code> function in the example above takes a list of <code>[xmin, xmax, ymin, ymax]</code> and specifies the viewport of the axes.</p></li><li><p>btw,we can use <code>numpy arrays</code> to process data.In fact, all sequences are converted to numpy arrays internally. </p></li></ul><h2 id="plotting-several-lines-with-different-format-styles-in-one-function-call-using-arrays"><a href="#plotting-several-lines-with-different-format-styles-in-one-function-call-using-arrays" class="headerlink" title="plotting several lines with different format styles in one function call using arrays"></a>plotting several lines with different format styles in one function call using arrays</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">t = np.arange(<span class="number">0.</span>, <span class="number">5.</span>, <span class="number">0.2</span>)</span><br><span class="line"><span class="comment"># red dashes, blue squares and green triangles</span></span><br><span class="line">plt.plot(t, t, <span class="string">&#x27;r--&#x27;</span>, t, t**<span class="number">2</span>, <span class="string">&#x27;bs&#x27;</span>, t, t**<span class="number">3</span>, <span class="string">&#x27;g^&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211022194414.png" alt=""></p><h1 id="Plotting-with-keyword-strings"><a href="#Plotting-with-keyword-strings" class="headerlink" title="Plotting with keyword strings"></a>Plotting with keyword strings</h1><ul><li><p>There are some instances where you have data in a format that lets you access particular variables with strings. For example, with <a href="https://numpy.org/doc/stable/reference/generated/numpy.recarray.html#numpy.recarray"><code>numpy.recarray</code></a> or <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html#pandas.DataFrame"><code>pandas.DataFrame</code></a>.</p></li><li><p>Matplotlib allows you provide such an object with the <code>data</code> keyword argument. If provided, then you may generate plots with the strings corresponding to these variables.</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># the type of data is dict,we can use the keyword to visit the corresponding value.</span></span><br><span class="line">data = &#123;<span class="string">&#x27;a&#x27;</span>: np.arange(<span class="number">50</span>),</span><br><span class="line">        <span class="string">&#x27;c&#x27;</span>: np.random.randint(<span class="number">0</span>, <span class="number">50</span>, <span class="number">50</span>),</span><br><span class="line">        <span class="string">&#x27;d&#x27;</span>: np.random.randn(<span class="number">50</span>)&#125;</span><br><span class="line">data[<span class="string">&#x27;b&#x27;</span>] = data[<span class="string">&#x27;a&#x27;</span>] + <span class="number">10</span> * np.random.randn(<span class="number">50</span>)</span><br><span class="line">data[<span class="string">&#x27;d&#x27;</span>] = np.<span class="built_in">abs</span>(data[<span class="string">&#x27;d&#x27;</span>]) * <span class="number">100</span></span><br><span class="line"></span><br><span class="line">plt.scatter(<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, c=<span class="string">&#x27;c&#x27;</span>, s=<span class="string">&#x27;d&#x27;</span>, data=data)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;entry a&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;entry b&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><blockquote><p>plt.scatter is called to plot scatter diagram</p></blockquote><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211022194415.png" alt="pyplot"></p><h1 id="Plotting-with-categorical-variables"><a href="#Plotting-with-categorical-variables" class="headerlink" title="Plotting with categorical variables"></a>Plotting with categorical variables</h1><ul><li>It is also possible to create a plot using categorical variables. Matplotlib allows you to pass categorical variables directly to many plotting functions. For example:</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">names = [<span class="string">&#x27;group_a&#x27;</span>, <span class="string">&#x27;group_b&#x27;</span>, <span class="string">&#x27;group_c&#x27;</span>]</span><br><span class="line">values = [<span class="number">1</span>, <span class="number">10</span>, <span class="number">100</span>]</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">9</span>, <span class="number">3</span>))</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">131</span>)</span><br><span class="line">plt.bar(names, values)</span><br><span class="line">plt.subplot(<span class="number">132</span>)</span><br><span class="line">plt.scatter(names, values)</span><br><span class="line">plt.subplot(<span class="number">133</span>)</span><br><span class="line">plt.plot(names, values)</span><br><span class="line">plt.suptitle(<span class="string">&#x27;Categorical Plotting&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211022194416.png" alt="Categorical Plotting"></p><h1 id="Controlling-line-properties"><a href="#Controlling-line-properties" class="headerlink" title="Controlling line properties"></a>Controlling line properties</h1><ul><li>Lines have many attributes that you can set: linewidth, dash style, antialiased, etc; see <a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.lines.Line2D.html#matplotlib.lines.Line2D"><code>matplotlib.lines.Line2D</code></a>. There are several ways to set line properties</li></ul><h1 id="Working-with-text"><a href="#Working-with-text" class="headerlink" title="Working with text"></a>Working with text</h1><ul><li><a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.text.html#matplotlib.pyplot.text"><code>text</code></a> can be used to add text in an <strong>arbitrary</strong> location, and <a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.xlabel.html#matplotlib.pyplot.xlabel"><code>xlabel</code></a>, <a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.ylabel.html#matplotlib.pyplot.ylabel"><code>ylabel</code></a> and <a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.title.html#matplotlib.pyplot.title"><code>title</code></a> are used to add text in the indicated locations (see <a href="https://matplotlib.org/stable/tutorials/text/text_intro.html">Text in Matplotlib Plots</a> for a more detailed example)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mu, sigma = <span class="number">100</span>, <span class="number">15</span></span><br><span class="line">x = mu + sigma * np.random.randn(<span class="number">10000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># the histogram of the data</span></span><br><span class="line">n, bins, patches = plt.hist(x, <span class="number">50</span>, density=<span class="number">1</span>, facecolor=<span class="string">&#x27;g&#x27;</span>, alpha=<span class="number">0.75</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">&#x27;Smarts&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Probability&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;Histogram of IQ&#x27;</span>)</span><br><span class="line">plt.text(<span class="number">60</span>, <span class="number">.025</span>, <span class="string">r&#x27;$\mu=100,\ \sigma=15$&#x27;</span>)</span><br><span class="line">plt.axis([<span class="number">40</span>, <span class="number">160</span>, <span class="number">0</span>, <span class="number">0.03</span>])</span><br><span class="line">plt.grid(<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211022194417.png" alt="Histogram of IQ"></p><p>More usage of matplotlib—-&gt; <a href="https://matplotlib.org/stable/contents.html">matplotlib official website</a></p>]]></content>
    
    
    <summary type="html">this note is based on the matplotlib&#39;s official website.My algorithm course need to visualize the runtime situation,so I record it.</summary>
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>json</title>
    <link href="http://example.com/2021/10/21/json/"/>
    <id>http://example.com/2021/10/21/json/</id>
    <published>2021-10-21T12:16:13.000Z</published>
    <updated>2022-01-14T10:47:27.900Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文大多引用自CSDN文章<a href="https://blog.csdn.net/gao_sl/article/details/81699063，整理出来仅供个人学习参考用，侵删。">https://blog.csdn.net/gao_sl/article/details/81699063，整理出来仅供个人学习参考用，侵删。</a></p></blockquote><h1 id="JSON语法规则"><a href="#JSON语法规则" class="headerlink" title="JSON语法规则"></a>JSON语法规则</h1><ul><li><p>JSON是<strong>存储和交换文本信息</strong>的一种传输格式</p></li><li><p>JSON作为一个轻量级的数据格式比xml效率更高</p></li><li><p>JSON</p><p>的两种格式</p><ul><li><strong>对象格式</strong><code>&#123;&quot;name&quot;:&quot;Cez&quot;,&quot;address&quot;:&quot;HITwh&quot;,&quot;age&quot;:20&#125;//JSON的对象格式的字符串</code></li><li><strong>数组对象</strong><code>[&#123;&quot;name&quot;:&quot;Cez&quot;,&quot;address&quot;:&quot;HITwh&quot;,&quot;age&quot;:20&#125;,&#123;&quot;name&quot;:&quot;lxy&quot;,&quot;address&quot;:&quot;HITWH&quot;,&quot;age&quot;:20&#125;]//数据对象格式</code></li></ul></li><li><p>从上面的两种格式可以看出对象格式和数组对象格式唯一的不同则是<strong>在对象格式的基础上加上了[]</strong>，再来看具体的结构，可以看出都是以<strong>键值对</strong>的形式出现的，中间以英文状态下的<strong>逗号</strong>（,）分隔。</p></li><li><p>在前端和后端进行数据传输的时候这种格式也是很受欢迎的，<strong>后端返回json格式的字符串</strong>，<strong>前台使用js中的JSON.parse()方法把JSON字符串解析为json对象，然后进行遍历，供前端使用。</strong></p></li><li><p>javascript 对象表示语法的子集。</p><ol><li>数据在名称/值对中</li><li>数据由逗号分隔</li><li>花括号保存对象</li><li>方括号保存数组</li></ol></li></ul><h1 id="JSON键值对"><a href="#JSON键值对" class="headerlink" title="JSON键值对"></a>JSON键值对</h1><ol><li><p>JSON数据的书写格式为：键值对(名称：值)</p></li><li><p>键值对中名称写在前面(用双引号引)，值写在后面，中间用冒号分隔</p></li><li>example:<code>&quot;name&quot;:&quot;cez&quot;</code></li></ol><h1 id="JSON值"><a href="#JSON值" class="headerlink" title="JSON值"></a>JSON值</h1><p>JSON值可以是：数字(整数或浮点数)、字符串(双引号)、逻辑值(true or false)、数组([])、对象( {} )</p><p>JSON正常就是由对象和数组组成，对象使用对象的方法来进行操作。数组使用数组的方法来进行操作。</p><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var ourcountry=[[&quot;北京市&quot;],[&quot;上海市&quot;],[&quot;合肥市&quot;,&quot;芜湖市&quot;,&quot;蚌埠市&quot;]]; // 数组</span><br><span class="line">window.alert(ourcountry[2][1]);</span><br></pre></td></tr></table></figure><h1 id="JSONArray"><a href="#JSONArray" class="headerlink" title="JSONArray"></a>JSONArray</h1><p>json数组，使用中括号[]，与其他数组不同之处在于数组里面的项也是json键值对的格式</p><h1 id="JSON对象"><a href="#JSON对象" class="headerlink" title="JSON对象"></a>JSON对象</h1><p>使用大括号{}，大括号内JSON键值对对应</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var status_process = &#123;</span><br><span class="line">    &quot; name5&quot; : &#x27;闲置期&#x27;,</span><br><span class="line">    &quot;name1&quot; : &#x27;播种期&#x27;,</span><br><span class="line">    &quot;name2&quot; : &#x27;苗期&#x27;,</span><br><span class="line">    &quot;name3&quot; : &#x27;生长期&#x27;,</span><br><span class="line">    &quot;name4&quot; : &#x27;采收期&#x27;</span><br><span class="line">&#125; </span><br><span class="line">window.alert(status_process[&quot;name5&quot;]);</span><br><span class="line">window.alert(status_process.name5);</span><br><span class="line">// 两个都为:闲置期</span><br></pre></td></tr></table></figure><h1 id="JSON字符串"><a href="#JSON字符串" class="headerlink" title="JSON字符串"></a>JSON字符串</h1><ul><li><p>json字符串是指该字符串变量的值<strong>与json的格式相同</strong>，但是不是json对象</p></li><li><p>example:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> s1=<span class="string">&quot;&#123;&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> s2 = <span class="string">&quot; &#x27;name5&#x27; : &#x27;闲置期&#x27;,  &#x27;name1&#x27; : &#x27;播种期&#x27;,&#x27;name2&#x27; : &#x27;苗期&#x27;,&#x27;name3&#x27; : &#x27;生长期&#x27;,&#x27;name4&#x27; : &#x27;采收期&#x27;&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> s3=<span class="string">&quot;&#125;&quot;</span>;</span><br><span class="line"><span class="keyword">var</span>  status_process=s1+s2+s3;</span><br></pre></td></tr></table></figure></li></ul><h1 id="JSON数组遍历"><a href="#JSON数组遍历" class="headerlink" title="JSON数组遍历"></a>JSON数组遍历</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">packJson = [</span><br><span class="line"></span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;zhang&quot;</span>, <span class="string">&quot;password&quot;</span>:<span class="string">&quot;123&quot;</span>&#125;,</span><br><span class="line"> </span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;li&quot;</span>, <span class="string">&quot;password&quot;</span>:<span class="string">&quot;456&quot;</span>&#125;</span><br><span class="line"> </span><br><span class="line">];</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> p <span class="keyword">in</span> packJson)&#123;<span class="comment">//遍历json数组时，这么写p为索引</span></span><br><span class="line"> </span><br><span class="line">    alert(packJson[p].name + <span class="string">&quot; &quot;</span> + packJson[p].password);</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 或者</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; packJson.length; i++)&#123;</span><br><span class="line"> </span><br><span class="line">        alert(packJson[i].name + <span class="string">&quot; &quot;</span> + packJson[i].password);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="JSON数组的操作"><a href="#JSON数组的操作" class="headerlink" title="JSON数组的操作"></a>JSON数组的操作</h1><p>1、定义 <code>var josnArry=[];</code></p><p>2、添加 <code>jsonArry.push(jsonObj);</code></p><p>3、删除 <code>delete jsonArry[0];</code> <code>splice(index,length);</code></p><p>4.循环访问数组</p><p>a.jquery</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$.each(jsonArry,<span class="function"><span class="keyword">function</span>(<span class="params">index,item</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> userId=item.userId;      </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>b.一般方式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;jsonArry.length;i++)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">var</span> userId=jsonArry[i].userId;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>c.特殊方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> item <span class="keyword">in</span> jsonArry)</span><br><span class="line">&#123; </span><br><span class="line">  <span class="keyword">var</span> userId=jsonArry[item].userId;<span class="comment">//注意：此处的item不是数组项，而是数组项的索引</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="JSON对象遍历"><a href="#JSON对象遍历" class="headerlink" title="JSON对象遍历"></a>JSON对象遍历</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">myJson = &#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;ji&quot;</span>, <span class="string">&quot;password&quot;</span>:<span class="string">&quot;123&quot;</span>&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> p <span class="keyword">in</span> myJson)&#123;<span class="comment">//遍历json对象的每个key/value对,p为key</span></span><br><span class="line"> </span><br><span class="line">    alert(p + <span class="string">&quot; &quot;</span> + myJson[p]);</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021202217.png" alt="image-20210613141735143"></p><h1 id="字符串和JSON对象和JSON对象数组相互转换"><a href="#字符串和JSON对象和JSON对象数组相互转换" class="headerlink" title="字符串和JSON对象和JSON对象数组相互转换"></a>字符串和JSON对象和JSON对象数组相互转换</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> jsonStr  = <span class="string">&quot;&#123;\&quot;userId\&quot;:\&quot;001\&quot;&#125;&quot;</span>;  <span class="comment">// json对象字符串</span></span><br><span class="line"><span class="keyword">var</span> jsonArryStr = <span class="string">&quot;[&#123;\&quot;userId\&quot;:\&quot;001\&quot;&#125;,&#123;\&quot;userId\&quot;:\&quot;002\&quot;&#125;]&quot;</span>; <span class="comment">// json数组字符串</span></span><br><span class="line"><span class="keyword">var</span> jsonObj  = <span class="built_in">JSON</span>.parse(jsonStr);     <span class="comment">// 字符串转为json对象</span></span><br><span class="line"><span class="keyword">var</span> jsonArry = <span class="built_in">JSON</span>.parse(jsonArryStr); <span class="comment">// 字符串转为json数组</span></span><br><span class="line"><span class="keyword">var</span> jsonStr  = <span class="built_in">JSON</span>.stringify(jsonObj); <span class="comment">// json对象转为字符串</span></span><br><span class="line"><span class="keyword">var</span> jsonArryStr=<span class="built_in">JSON</span>.stringify(jsonArry);<span class="comment">// json数组转为字符串</span></span><br><span class="line">alert(jsonStr);</span><br><span class="line">alert(jsonArryStr);</span><br><span class="line">alert(jsonObj.userId);</span><br><span class="line">alert(jsonArry[<span class="number">0</span>][<span class="string">&#x27;userId&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">JSON</span>.stringify(obj)       将<span class="built_in">JSON</span>对象转为字符串。</span><br><span class="line"><span class="built_in">JSON</span>.parse(string)       将字符串转为<span class="built_in">JSON</span>对象格式。</span><br></pre></td></tr></table></figure><h1 id="JSON字符串转化为JSON对象"><a href="#JSON字符串转化为JSON对象" class="headerlink" title="JSON字符串转化为JSON对象"></a>JSON字符串转化为JSON对象</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// jquery的方法</span></span><br><span class="line"><span class="keyword">var</span> jsonObj = $.parseJSON(jsonStr)</span><br><span class="line"><span class="comment">//js 的方法</span></span><br><span class="line"><span class="keyword">var</span> jsonObj =  <span class="built_in">JSON</span>.parse(jsonStr)</span><br></pre></td></tr></table></figure><h1 id="JSON对象转化为JSON字符串"><a href="#JSON对象转化为JSON字符串" class="headerlink" title="JSON对象转化为JSON字符串"></a>JSON对象转化为JSON字符串</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//js方法</span></span><br><span class="line"><span class="keyword">var</span> jsonStr1 = <span class="built_in">JSON</span>.stringify(jsonObj)</span><br></pre></td></tr></table></figure><ul><li>注：只有数组或者json数组才可以使用length方法。<strong>json对象使用length方法无效</strong>。 Map map和json都是键值对，不同的是map中键值对中间用等号分开，json中键值对中间用冒号分开。其实json就是一种特殊形式的map。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文大多引用自CSDN文章&lt;a href=&quot;https://blog.csdn.net/gao_sl/article/details/81699063，整理出来仅供个人学习参考用，侵删。&quot;&gt;https://blog.csdn.net/gao_sl/</summary>
      
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Vue组件化编程</title>
    <link href="http://example.com/2021/10/21/Vue%E7%BB%84%E4%BB%B6%E5%8C%96%E7%BC%96%E7%A8%8B/"/>
    <id>http://example.com/2021/10/21/Vue%E7%BB%84%E4%BB%B6%E5%8C%96%E7%BC%96%E7%A8%8B/</id>
    <published>2021-10-21T11:34:53.000Z</published>
    <updated>2021-10-21T11:50:59.399Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue组件化编程"><a href="#Vue组件化编程" class="headerlink" title="Vue组件化编程"></a>Vue组件化编程</h1><h2 id="对组件的理解"><a href="#对组件的理解" class="headerlink" title="对组件的理解"></a>对组件的理解</h2><ul><li><p>传统方式</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194706.png" alt="image-20210719005643259"></p></li></ul><ul><li><p>组件方式</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194707.png" alt="image-20210719005858994"></p></li></ul><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194708.png" alt="image-20210719005919536"></p><ul><li>组件的定义：实现应用中<strong>局部</strong>功能<strong>代码</strong>和<strong>资源</strong>的<strong>集合</strong></li></ul><ul><li>模块<ul><li>理解：向外提供特定功能的js程序，一般就是一个js文件</li><li>为什么：js文件很多很复杂</li><li>作用：复用js，简化js的编写，提高js运行效率</li></ul></li></ul><ul><li>模块化：当应用中的js都以模块来编写，那么这个应用就是一个模块化的应用</li><li>组件化：当应用中的功能都是多组件的方式编写，那这个应用就是一个组件化的应用</li></ul><h2 id="非单文件组件"><a href="#非单文件组件" class="headerlink" title="非单文件组件"></a>非单文件组件</h2><p>非单文件组件</p><ul><li>一个文件中包含多个组件</li></ul><p>单文件组件</p><ul><li>一个文件中只包含一个组件 <code>xxx.vue</code></li></ul><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194709.png" alt="image-20210719013209747"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 第三步  编写组件标签 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">school</span>&gt;</span><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 第三步  编写组件标签 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">student</span>&gt;</span><span class="tag">&lt;/<span class="name">student</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">student</span>&gt;</span><span class="tag">&lt;/<span class="name">student</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hello</span>&gt;</span><span class="tag">&lt;/<span class="name">hello</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hello</span>&gt;</span><span class="tag">&lt;/<span class="name">hello</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//第一步  创建school组件</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> school = Vue.extend(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">template</span>:<span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="javascript">&lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">&lt;h2&gt;学校名称:&#123;&#123;schoolName&#125;&#125;&lt;/h2&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">&lt;h2&gt;学校地址:&#123;&#123;address&#125;&#125;&lt;/h2&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">&lt;button @click=&quot;showName&quot;&gt;点我提示学校名&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">&lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">`</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="built_in">this</span>.schoolName);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//el:&quot;#app&quot; //报错 组件定义时，一定不要写el配置项，因为最终所有的组件都要被一个vm管理，由vm决定服务哪个容器</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">schoolName</span>:<span class="string">&#x27;hitwh&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">address</span>:<span class="string">&quot;weihai&quot;</span>,</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//第一步  创建school组件</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> student = Vue.extend(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">template</span>:<span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="javascript">&lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">&lt;h2&gt;学生姓名:&#123;&#123;studentName&#125;&#125;&lt;/h2&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">&lt;h2&gt;学生年龄:&#123;&#123;age&#125;&#125;&lt;/h2&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">    &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">`</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">studentName</span>:<span class="string">&#x27;cez&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">age</span>:<span class="number">20</span>,</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> hello = Vue.extend(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">template</span>:<span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="javascript">&lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">&lt;h2&gt;Hello,&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">    &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">`</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">name</span>:<span class="string">&#x27;Tom&#x27;</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//全局注册组件，所有vm都可以使用</span></span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;hello&#x27;</span>,hello);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">components</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//第二步 注册组件(局部注册)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// school:school,</span></span></span><br><span class="line"><span class="javascript">            school,student</span></span><br><span class="line"><span class="javascript">            <span class="comment">// student:student</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>:<span class="string">&#x27;#app2&#x27;</span></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="组件的几个注意点"><a href="#组件的几个注意点" class="headerlink" title="组件的几个注意点"></a>组件的几个注意点</h2><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194710.png" alt="image-20210719085116926"></p><h2 id="嵌套组件"><a href="#嵌套组件" class="headerlink" title="嵌套组件"></a>嵌套组件</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="handlebars"><span class="xml"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    const student = Vue.extend(&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        template:`</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>学生姓名:</span><span class="template-variable">&#123;&#123;<span class="name">studentName</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>学生年龄:</span><span class="template-variable">&#123;&#123;<span class="name">age</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">`,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        data()&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            return &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                studentName:&#x27;cez&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                age:20,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;)</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    const school = Vue.extend(&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        name:&#x27;school&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        template:`</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名称:</span><span class="template-variable">&#123;&#123;<span class="name">schoolName</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址:</span><span class="template-variable">&#123;&#123;<span class="name">address</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showName&quot;</span>&gt;</span>点我提示学校名<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;<span class="name">student</span>&gt;</span><span class="tag">&lt;/<span class="name">student</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">`,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        methods:&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            showName()&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                alert(this.schoolName);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        data()&#123; </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            return &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                schoolName:&#x27;hitwh&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                address:&quot;weihai&quot;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        components:&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            student</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;  </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;)</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    const hello = Vue.extend(&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        template:`</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Hello,</span><span class="template-variable">&#123;&#123;<span class="name">name</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">`,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        data()&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            return &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                name:&#x27;Tom&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;)</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    const app = Vue.extend(&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        name:&#x27;app&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        template:`</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">school</span>&gt;</span><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">hello</span>&gt;</span><span class="tag">&lt;/<span class="name">hello</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">`,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        components:&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            school,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            hello</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;)</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    new Vue(&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        template:&#x27;<span class="tag">&lt;<span class="name">app</span>&gt;</span><span class="tag">&lt;/<span class="name">app</span>&gt;</span>&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        el:&quot;#root&quot;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        components:&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            app</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;)</span></span></span><br></pre></td></tr></table></figure><h2 id="单文件组件"><a href="#单文件组件" class="headerlink" title="单文件组件"></a>单文件组件</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 组件的结构 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名称:&#123;&#123;schoolName&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址:&#123;&#123;address&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showName&quot;</span>&gt;</span>点我提示学校名<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//组件交互相关的代码(数据、方法等)</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">name</span>:<span class="string">&#x27;School&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="built_in">this</span>.schoolName);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123; </span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">schoolName</span>:<span class="string">&#x27;hitwh&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">address</span>:<span class="string">&quot;weihai&quot;</span>,</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="使用Vue脚手架"><a href="#使用Vue脚手架" class="headerlink" title="使用Vue脚手架"></a>使用Vue脚手架</h1><h2 id="创建Vue脚手架"><a href="#创建Vue脚手架" class="headerlink" title="创建Vue脚手架"></a>创建Vue脚手架</h2><p>Vue CLI</p><ul><li><p>全局安装@vue/cli</p><p><code>npm install -g @vue/cli</code></p></li><li><p>切换要创建项目的目录，然后使用命令创建项目</p><p><code>vue create xxx</code></p></li><li><p>启动项目</p><p><code>npm run serve</code></p></li></ul><blockquote><p>配置npm淘宝镜像：<code>npm config set registry https://registry.npm.taobao.org</code></p></blockquote><h2 id="render函数"><a href="#render函数" class="headerlink" title="render函数"></a>render函数</h2><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194711.png" alt="image-20210719110640745"></p><h2 id="修改默认配置"><a href="#修改默认配置" class="headerlink" title="修改默认配置"></a>修改默认配置</h2><p>把默认配置信息放到output.js中查看：</p><p>​    <code>vue inspect &gt; output.js</code></p><p>参考<a href="https://cli.vuejs.org/zh/config/">vue-cli官方文档</a></p><p>语法检查：</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194712.png" alt="image-20210719113153419"></p><h2 id="ref属性"><a href="#ref属性" class="headerlink" title="ref属性"></a>ref属性</h2><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194713.png" alt="image-20210719151023888"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;h1 v-text=&quot;msg&quot; ref=&quot;title&quot;&gt;&lt;/h1&gt;</span><br><span class="line">      &lt;button @click=&quot;showDom&quot; ref=&quot;btn&quot;&gt;点我输出上方的DOM元素&lt;/button&gt;</span><br><span class="line">      &lt;School ref=&quot;sch&quot;&gt;&lt;/School&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">import School from &#x27;./components/School.vue&#x27;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">    name:&#x27;App&#x27;,</span><br><span class="line">    components:&#123;</span><br><span class="line">      School  </span><br><span class="line">    &#125;,</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">          msg:&#x27;Learn Vue&#x27;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line">      showDom()&#123;</span><br><span class="line">        console.log(this.$refs)</span><br><span class="line">        console.log(this.$refs.title)</span><br><span class="line">        console.log(this.$refs.btn)</span><br><span class="line">        console.log(this.$refs.sch)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">  </span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="props配置"><a href="#props配置" class="headerlink" title="props配置"></a>props配置</h2><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194714.png" alt="image-20210719154640462"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;h1&gt;&#123;&#123;msg&#125;&#125;&lt;/h1&gt;</span><br><span class="line">        &lt;h2&gt;学生姓名:&#123;&#123;myName&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;h2&gt;学生年龄:&#123;&#123;age&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;h2&gt;学生性别:&#123;&#123;myAge+1&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;button @click=&quot;changeAge&quot;&gt;尝试修改传来的年龄&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">    name:&#x27;Student&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">          msg:&quot;hello,world&quot;,</span><br><span class="line">          myName:this.name,</span><br><span class="line">          myAge:this.age,</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line">      changeAge()&#123;</span><br><span class="line">        this.myAge++;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    //props中的prop相较于data是优先接收的</span><br><span class="line">    // 简单接收</span><br><span class="line">    // props:[&#x27;name&#x27;,&#x27;sex&#x27;,&#x27;age&#x27;]</span><br><span class="line"></span><br><span class="line">    //接收的同时对数据类型限制</span><br><span class="line">    // props: &#123;</span><br><span class="line">    //   name: String,</span><br><span class="line">    //   age: Number,</span><br><span class="line">    //   sex: String</span><br><span class="line">    // &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //接收的同时对数据进行类型限制+默认值的指定+必要性的限制</span><br><span class="line">    props:&#123;</span><br><span class="line">      name:&#123;</span><br><span class="line">        type:String, //name的类型:String</span><br><span class="line">        required: true //name是必要的</span><br><span class="line">      &#125;,</span><br><span class="line">      age:&#123;</span><br><span class="line">        type:Number,</span><br><span class="line">        default:99     //默认值</span><br><span class="line">      &#125;,</span><br><span class="line">      sex:&#123;</span><br><span class="line">        type:String,</span><br><span class="line">        required:true</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;Student name=&quot;cez&quot; sex=&quot;男&quot; :age=&quot;20&quot;/&gt;</span><br><span class="line">    &lt;hr/&gt;</span><br><span class="line">    &lt;Student name=&quot;lxy&quot; sex=&quot;女&quot; :age=&quot;20&quot;/&gt;</span><br><span class="line">    &lt;hr/&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="mixin混入"><a href="#mixin混入" class="headerlink" title="mixin混入"></a>mixin混入</h2><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194715.png" alt="image-20210719161204954"></p><ul><li><p>mixin.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> mixin = &#123;</span><br><span class="line">    <span class="attr">methods</span>:&#123;</span><br><span class="line">        <span class="function"><span class="title">showName</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            alert(<span class="built_in">this</span>.name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> mixin2 = &#123;</span><br><span class="line">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">x</span>:<span class="number">100</span>,</span><br><span class="line">            <span class="attr">y</span>:<span class="number">200</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>局部混入:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入混合</span></span><br><span class="line"><span class="keyword">import</span> &#123;mixin,mixin2&#125; <span class="keyword">from</span> <span class="string">&#x27;../mixin&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;Student&#x27;</span>,</span><br><span class="line">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">          <span class="attr">name</span>:<span class="string">&#x27;cez&#x27;</span>,</span><br><span class="line">          <span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">mixins</span>:[mixin,mixin2]</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>全局混入:（main.js)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入Vue</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="comment">// 引入App</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;mixin,mixin2&#125; <span class="keyword">from</span> <span class="string">&quot;@/mixin&quot;</span>;</span><br><span class="line"><span class="comment">// 关闭Vue的生产提示</span></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">Vue.mixin(mixin)</span><br><span class="line">Vue.mixin(mixin2)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建vm</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span><br><span class="line">    <span class="attr">render</span>:<span class="function"><span class="params">h</span>=&gt;</span>h(App)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194716.png" alt="image-20210719163437235"></p><ul><li>plugins.js   </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="function"><span class="title">install</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;install&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="scoped样式"><a href="#scoped样式" class="headerlink" title="scoped样式"></a>scoped样式</h2><ul><li>作用：让样式在局部生效，防止冲突</li><li>写法：<code>&lt;style scoped&gt;</code></li></ul><h2 id="路由简介"><a href="#路由简介" class="headerlink" title="路由简介"></a>路由简介</h2><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194717.png" alt="image-20210719165729769"></p><p>SPA应用(单页面应用)</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194718.png" alt="image-20210719170143304"></p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194719.png" alt="image-20210719170850609"></p><ul><li>vue-router是vue的一个插件库，专门用来实现SPA应用</li><li>对SPA应用的理解：<ul><li>单页web应用(single page web application,SPA)</li><li>整个应用只有一个完整的页面</li><li>点击页面中的导航链接不会刷新页面，只会做页面的局部更新</li><li>数据需要通过ajax请求获取</li></ul></li></ul><ul><li>什么是路由？<ul><li>一个路由就是一组映射关系(key value)</li><li>key为路径 value可能是function或component</li></ul></li></ul><ul><li>路由分类<ul><li>前端路由<ul><li>理解：value是component，用于展示页面内容</li><li>工作过程：当浏览器的路径改变时，对应的组件就会显示</li></ul></li><li>后端路由<ul><li>理解：value是function，用于处理客户端提交的请求</li><li>工作过程：服务器收到一个请求时， 根据<strong>请求路径</strong>找到<strong>匹配的函数</strong>来处理请求，返回相应数据</li></ul></li></ul></li></ul><h2 id="基本路由"><a href="#基本路由" class="headerlink" title="基本路由"></a>基本路由</h2><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194720.png" alt="image-20210719202807376"></p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194721.png" alt="image-20210719202816796"></p><h2 id="嵌套路由-多级路由"><a href="#嵌套路由-多级路由" class="headerlink" title="嵌套路由(多级路由)"></a>嵌套路由(多级路由)</h2><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194722.png" alt="image-20210719211816263"></p><h2 id="路由传参"><a href="#路由传参" class="headerlink" title="路由传参"></a>路由传参</h2><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194723.png" alt="image-20210719213303628"></p><h2 id="命名路由"><a href="#命名路由" class="headerlink" title="命名路由"></a>命名路由</h2><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194724.png" alt="image-20210719213906028"></p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194725.png" alt="image-20210719213918730"></p><h2 id="路由的params参数"><a href="#路由的params参数" class="headerlink" title="路由的params参数"></a>路由的params参数</h2><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194726.png" alt="image-20210719222010763"></p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194727.png" alt="image-20210719222034635"></p><h2 id="路由的props配置"><a href="#路由的props配置" class="headerlink" title="路由的props配置"></a>路由的props配置</h2><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194728.png" alt="image-20210719223326264"></p><h2 id="router-link的replace属性"><a href="#router-link的replace属性" class="headerlink" title="router-link的replace属性"></a>router-link的replace属性</h2><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194729.png" alt="image-20210719224736494"></p><h2 id="编程式路由导航"><a href="#编程式路由导航" class="headerlink" title="编程式路由导航"></a>编程式路由导航</h2><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194730.png" alt="image-20210719231846147"></p><h2 id="缓存路由组件"><a href="#缓存路由组件" class="headerlink" title="缓存路由组件"></a>缓存路由组件</h2><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194731.png" alt="image-20210719232514541"></p><h2 id="history模式与hash模式"><a href="#history模式与hash模式" class="headerlink" title="history模式与hash模式"></a>history模式与hash模式</h2><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021194732.png" alt="image-20210719235522643"></p><h2 id="ElementUI"><a href="#ElementUI" class="headerlink" title="ElementUI"></a>ElementUI</h2><ul><li>使用方法见官网即可</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vue组件化编程&quot;&gt;&lt;a href=&quot;#Vue组件化编程&quot; class=&quot;headerlink&quot; title=&quot;Vue组件化编程&quot;&gt;&lt;/a&gt;Vue组件化编程&lt;/h1&gt;&lt;h2 id=&quot;对组件的理解&quot;&gt;&lt;a href=&quot;#对组件的理解&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="技术" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>ubuntu18.04及后续版本设置开机自启动脚本</title>
    <link href="http://example.com/2021/10/19/ubuntu18-04%E5%8F%8A%E5%90%8E%E7%BB%AD%E7%89%88%E6%9C%AC%E8%AE%BE%E7%BD%AE%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC/"/>
    <id>http://example.com/2021/10/19/ubuntu18-04%E5%8F%8A%E5%90%8E%E7%BB%AD%E7%89%88%E6%9C%AC%E8%AE%BE%E7%BD%AE%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC/</id>
    <published>2021-10-19T05:27:06.000Z</published>
    <updated>2021-10-19T05:55:33.563Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li><p>Ubuntu18.04之后的版本并不像CentOS等一样，继续使用inited管理系统，而是改用了systemd，因此网络上很多设置开机自启动脚本的博客对Ubuntu18.04以及Ubuntu20.04等版本是不适用的</p><blockquote><p>当然，你也可以选择设置使用inited，but systemd是比较简单的，没必要舍近求远。</p></blockquote></li></ul><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><ol><li><p>在<code>/etc/systemd/system</code>文件夹下新建一个文件<code>xx.service</code>(名字自取，不要歧义即可，如<code>test.service</code></p></li><li><p>编辑该文件如下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=xx app init service</span><br><span class="line">Documentation=see /opt/init.sh</span><br><span class="line">After=network.target auditd.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/bin/bash /opt/init.sh</span><br><span class="line">Restart=on-failure</span><br><span class="line">Type=oneshot</span><br><span class="line">RemainAfterExit=yes</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">Alias=tsingyun.service</span><br></pre></td></tr></table></figure></li><li><p>将要开机自启动的脚本写在<code>/opt/init.sh</code>中即可  </p></li><li><p>```shell<br>systemctl enable test.service<br>systemctl restart test.service </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">   </span><br><span class="line"></span><br><span class="line"># 小结</span><br><span class="line"></span><br><span class="line">- 解决很多问题时尤其要注意版本的问题，网络上的很多解决方案都没有注明版本，然而当排除其他情况时(手滑、手贱)等，就要考虑考虑版本了，比如Hexo-Theme-Sakura就不能使用node 14.0     </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">#!bin/bash </span><br><span class="line"></span><br><span class="line">cd /blog</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Ubuntu18.04之后的版本并不像CentOS等一样，继续使用inited管理系统，而是改用了systemd，因此网络</summary>
      
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Dynamic Programming</title>
    <link href="http://example.com/2021/10/18/DP%E4%BD%9C%E4%B8%9A/"/>
    <id>http://example.com/2021/10/18/DP%E4%BD%9C%E4%B8%9A/</id>
    <published>2021-10-18T11:04:49.000Z</published>
    <updated>2022-01-14T10:12:33.167Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h1><h3 id="优化子结构"><a href="#优化子结构" class="headerlink" title="优化子结构"></a>优化子结构</h3><ul><li>分析优化解的结构</li></ul><blockquote><p>为方便表示，我们记 · 为合并操作,$s[i]$为$a_1\sim a_i$的代价之和($1\le i\le n$)</p></blockquote><script type="math/tex; mode=display">a_1·a_2·a_3·...·a_n=\left\{  \begin{array}{**lr**}  a_1·(a_2·...a_n)\\  (a_1·a_2)·(a_3·...a_n)\\...\\(a_1·a_2·...a_k)·（a_{k+1}·...a_n)\\...\\(a_1·a_2·...a_{n-1})·a_n  \end{array} \right.</script><p>如果等式右端所有子问题的最大合并方案的代价均已知，则根据等式右边组合子问题的解，取合并方案代价的最大值即可获得解。</p><script type="math/tex; mode=display">cost_{1\sim n}=\left\{               \begin{array}{**lr**}               cost_{1\sim 1}+cost_{2\sim{n}}+s[n]              \\               cost_{1 \sim 2}+cost_{3 \sim n}+s[n]\\             ...\\              cost_{1 \sim k}+cost_{k+1 \sim n}+s[n]\\             ...\\             cost_{1 \sim n-1}+cost_{n \sim n}+s[n]             \end{array}  \right.</script><ul><li><p><strong>优化子结构</strong></p><p>若$(a_1·a_2·…a_k)·（a_{k+1}·…a_n)$是代价最大的合并方案，则该方案中，计算$a_1·a_2·…a_k$与计算$a_{k+1}·…a_n$的方案必须都是代价最大的方案(如若不然，我们可以找到代价更大的方案来替换原方案，得到合并后更大的方案，故而矛盾)</p></li></ul><h3 id="代价方程"><a href="#代价方程" class="headerlink" title="代价方程"></a>代价方程</h3><script type="math/tex; mode=display">cost_{i\sim j}=\left\{               \begin{array}{**lr**}               0, if \ \ \ i==j              \\               max_{i\le k \le j-1}\{cost_{i \sim k}+cost_{k+1 \sim j}+s[j]-s[i-1]\},if\ \ i<j\\             \end{array}  \right.</script><blockquote><p>说明：$s[j]-s[i-1]即a[i]\sim a[j]的代价之和，运用了简单的前缀和算法$</p></blockquote><h3 id="伪代码及时间复杂性"><a href="#伪代码及时间复杂性" class="headerlink" title="伪代码及时间复杂性"></a>伪代码及时间复杂性</h3><ul><li>伪代码</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mergeArray</span>(a,cost,m):</span><br><span class="line"><span class="comment">// m[i,j]记录ai...aj的最优划分处</span></span><br><span class="line">let s be a <span class="keyword">new</span> [<span class="number">1.</span>..n] array </span><br><span class="line">n = a.length </span><br><span class="line"><span class="keyword">for</span> i=<span class="number">1</span> to n DO </span><br><span class="line">    cost[i,i]=<span class="number">0</span></span><br><span class="line">    s[i] = a[i]</span><br><span class="line"><span class="keyword">for</span> i=<span class="number">1</span> to n DO </span><br><span class="line">    s[i] += s[i<span class="number">-1</span>] </span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span> len=<span class="number">2</span> to n DO </span><br><span class="line">    <span class="keyword">for</span> i=<span class="number">1</span> to n-len+<span class="number">1</span> DO  </span><br><span class="line">        j = i+l<span class="number">-1</span> </span><br><span class="line">        cost[i,j] = ∞ </span><br><span class="line">        <span class="keyword">for</span> k=i to j<span class="number">-1</span> DO </span><br><span class="line">            q = cost[i,k]+cost[k+<span class="number">1</span>,j]+s[j]-s[i<span class="number">-1</span>]</span><br><span class="line">            <span class="keyword">if</span> q&gt;cost[i,j] then cost[i,j]=q,m[i,j]=k</span><br><span class="line">          </span><br><span class="line"><span class="keyword">return</span> cost,m</span><br></pre></td></tr></table></figure><p>  时间复杂性:$(len,i,k)$三层循环，每层至多执行$n-1$次，故而时间复杂度为$O(n^3)$</p><ul><li>构造最优解</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Print-<span class="built_in">Optimal</span>(m,i,j)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> i==j then print <span class="string">&quot;a&quot;</span>i</span><br><span class="line"><span class="keyword">else</span> print <span class="string">&quot;(&quot;</span></span><br><span class="line">    Print-<span class="built_in">Optimal</span>(m,i,m[i,j])</span><br><span class="line">Print-<span class="built_in">Optimal</span>(m,m[i,j]+<span class="number">1</span>,j)</span><br><span class="line">     print <span class="string">&quot;)</span></span><br></pre></td></tr></table></figure><p> 调用Print-Optimal(m,1,n)即可。时间复杂度:$O(n)$</p><h1 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h1><h3 id="优化子结构-1"><a href="#优化子结构-1" class="headerlink" title="优化子结构"></a>优化子结构</h3><ul><li><p>分析优化解的结构</p><blockquote><p>记以$a_i$为最后一个数字的增长子序列为$C_i$</p></blockquote></li></ul><script type="math/tex; mode=display">C_i=\left\{               \begin{array}{**lr**}               C_{i_{1}}+a_i              \\               C_{i_{2}}+a_i\\             ...\\              C_{i_{k}}+a_i\\             ...\\             C_{i_m}+a_i             \end{array}  \right.</script><p>​    其中，$1\le i \le n$ ，$i_1,…i_k,…i_m$均小于$i$</p><p>​               $i_1,i_2,…i_k…i_{m}$满足$a_{i_1}\le a_i,a_{i_2}\le a_i,…a_{i_k}\le a_i,…a_{i_m}\le a_i$，且</p><ul><li><p><strong>优化子结构</strong></p><p>若$C_{i_k}+a_i$为以$a_i$结尾的最长增长子序列，那么$C_{i_k}$是以$a_{i_k}$为结尾的最长增长子序列。(如若不然，我们可以找到以$a_{i_k}$结尾的一个最长增长子序列，将其加上$a_i$后得到的增长子序列比$C_{i_k}+a_i$更长，矛盾。)</p></li></ul><h2 id="代价方程-1"><a href="#代价方程-1" class="headerlink" title="代价方程"></a>代价方程</h2><blockquote><p> 设$L_i$为以$a_i$结尾的最长增长子序列的长度</p></blockquote><script type="math/tex; mode=display">L_i=\left\{               \begin{array}{**lr**}               1, if \ \ \ i==1              \\               max\{max\{L_{i_1},L_{i_2},...L_{i_m}\}+1,1\},i\gt1,i_1,i_2,...i_k...i_{m}均小于i,且a_{i_1}\le a_i,a_{i_2}\le a_i,...a_{i_k}\le a_i,...a_{i_m}\le a_i             \end{array}  \right.</script><h3 id="伪代码及时间复杂性-1"><a href="#伪代码及时间复杂性-1" class="headerlink" title="伪代码及时间复杂性"></a>伪代码及时间复杂性</h3><ul><li>伪代码</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Longest-Increasing-<span class="built_in">SubSequence</span>(a,L,P):</span><br><span class="line">n = a.length </span><br><span class="line">L[<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i=<span class="number">1</span> to n DO</span><br><span class="line">    P[i] = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i=<span class="number">2</span> to n DO</span><br><span class="line">    L[i] = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> j=<span class="number">1</span> to i<span class="number">-1</span> DO</span><br><span class="line">        <span class="keyword">if</span> (a[j]&gt;=a[i])</span><br><span class="line">        then </span><br><span class="line">            L[i] = <span class="built_in">max</span>(L[j] + <span class="number">1</span>,L[i])</span><br><span class="line">            <span class="keyword">if</span> (L[i]==L[j]+<span class="number">1</span>) then P[i] = j      <span class="comment">//记录以i为结尾的最长上升子序列的前一个数的下标    </span></span><br><span class="line">                </span><br><span class="line"><span class="keyword">return</span> L,P</span><br></pre></td></tr></table></figure><ul><li>时间复杂性:$(i,j)$两层循环，每层至多$n-1$次，故时间复杂度为$O(n^2)$</li></ul><ul><li>构造最优解，找到一个满足题意的$S^{‘}$,使得$|S^{‘}|$最大   </li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Print-<span class="built_in">Optimal</span>(P,k):</span><br><span class="line"><span class="keyword">if</span> k==<span class="number">0</span> </span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    Print-<span class="built_in">Optimal</span>(P,k)</span><br><span class="line">    print a[k]</span><br><span class="line">    print <span class="string">&quot;  &quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">////找到以何值结尾的子序列为最长上升子序列，并返回其在数组中的下标</span></span><br><span class="line">Find-<span class="built_in">Index</span>(L):</span><br><span class="line">    lss = <span class="number">1</span> </span><br><span class="line"><span class="keyword">for</span> i=<span class="number">2</span> to n DO </span><br><span class="line">        <span class="keyword">if</span> L[i]&gt;lss then lss = i   </span><br><span class="line">    <span class="keyword">return</span> lss</span><br></pre></td></tr></table></figure><p>调用Print-Optimal(P,Find-Index(L))即可得到一个最优解。时间复杂度:$O(n)$</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第一题&quot;&gt;&lt;a href=&quot;#第一题&quot; class=&quot;headerlink&quot; title=&quot;第一题&quot;&gt;&lt;/a&gt;第一题&lt;/h1&gt;&lt;h3 id=&quot;优化子结构&quot;&gt;&lt;a href=&quot;#优化子结构&quot; class=&quot;headerlink&quot; title=&quot;优化子结构&quot;&gt;&lt;/a&gt;</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>Vue基础</title>
    <link href="http://example.com/2021/07/05/Vue%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2021/07/05/Vue%E5%9F%BA%E7%A1%80/</id>
    <published>2021-07-05T11:34:45.000Z</published>
    <updated>2021-10-21T11:45:54.427Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue简介"><a href="#Vue简介" class="headerlink" title="Vue简介"></a>Vue简介</h1><h2 id="Vue的特点"><a href="#Vue的特点" class="headerlink" title="Vue的特点"></a>Vue的特点</h2><ul><li><p>采用<strong>组件化</strong>模式，提高代码复用率，且让代码更好维护</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193730.png" alt="image-20210716094215363"></p></li><li><p><strong>声明式</strong>编码，让编码人员无需直接操作DOM，提高开发效率</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193731.png" alt="image-20210716094437585"></p></li><li><p>使用<strong>虚拟DOM</strong>+优秀的<strong>Diff算法</strong>，尽量复用DOM节点</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193732.png" alt="image-20210716094701431"></p><p>​    <img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193733.png" alt="image-20210716094920922"></p></li></ul><h1 id="搭建Vue开发环境"><a href="#搭建Vue开发环境" class="headerlink" title="搭建Vue开发环境"></a>搭建Vue开发环境</h1><h2 id="直接用script引入"><a href="#直接用script引入" class="headerlink" title="直接用script引入"></a>直接用script引入</h2><ul><li>CDN</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>最好使用Vue Devtools</li></ul><h1 id="Vue核心"><a href="#Vue核心" class="headerlink" title="Vue核心"></a>Vue核心</h1><h2 id="Hello"><a href="#Hello" class="headerlink" title="Hello"></a>Hello</h2><ul><li>想让Vue工作，就必须创建一个Vue实例，且要传入一个<strong>配置对象</strong></li><li>root容器里的代码依然符合HTML规范，只不过混入了一些特殊的Vue语法</li><li>root容器里的代码被称为<strong>Vue模板</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello,&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//创建Vue实例,得到 ViewModel   </span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">el</span>: <span class="string">&#x27;#root&#x27;</span>, <span class="comment">//el用于指定当前Vue实例为哪个容器服务，值通常为CSS选择器字符串</span></span></span><br><span class="line"><span class="javascript">            <span class="attr">data</span>: &#123; <span class="comment">//data中用于存储数据，数据供el所指定的容器去使用，值暂时先写成一个对象</span></span></span><br><span class="line"><span class="javascript">                <span class="attr">name</span>:<span class="string">&#x27;cez&#x27;</span></span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">methods</span>: &#123;&#125;</span></span><br><span class="line"><span class="javascript">        &#125;);</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="分析Hello案例"><a href="#分析Hello案例" class="headerlink" title="分析Hello案例"></a>分析Hello案例</h2><ul><li>Vue实例和模板是<strong>一一对应</strong>的关系，以下两段代码中，均无法正常解析渲染</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello,&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello,&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;.root&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123; </span></span><br><span class="line"><span class="javascript">            <span class="attr">name</span>:<span class="string">&#x27;cez&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;&#125;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello,&#123;&#123;name&#125;&#125;,&#123;&#123;address&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123; </span></span><br><span class="line"><span class="javascript">            <span class="attr">name</span>:<span class="string">&#x27;cez&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;&#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123; </span></span><br><span class="line"><span class="javascript">            <span class="attr">address</span>:<span class="string">&#x27;山东&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;&#125;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    </p><ul><li>注意区分JS表达式和JS代码(语句)：<ul><li>表达式：一个表达式会产生一个值，可以放在任何一个需要值的地方   </li><li>js代码(语句)：<code>if()&#123;&#125;    for()&#123;&#125;等等</code>  </li></ul></li></ul><ul><li>真实开发中只有一个Vue实例，并且会配合组件一起使用</li><li>中的xxx需要写js表达式，且xxx可以自动读取到data中的所有属性</li><li><strong>一旦data中的数据发生改变，那么模板中用到该数据的地方也会自动更新。</strong></li></ul><h2 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h2><ul><li><p>Vue模板语法有两大类：</p><ul><li><p>插值语法：</p><ul><li>功能：用于解析标签体内容</li><li>写法：,xxx是js表达式，且可以直接读取到data中的所有属性</li></ul></li><li><p>指令语法：</p><ul><li><p>功能：用于解析标签(包括：标签属性、标签体内容、绑定事件…)</p></li><li><p>举例：v-bind:href=”xxx”或省略v-bind，xxx同样要写js表达式，且可以直接读取data中的所有属性</p><blockquote><p>Vue中有很多的指令，且形式都是：v-????，此处只是拿v-bind举例子</p></blockquote></li></ul></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>插值语法<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>指令语法<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>cez网站<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>cez网站2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//创建Vue实例,得到 ViewModel</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">name</span>:<span class="string">&#x27;cez&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">url</span>:<span class="string">&quot;http://www.cezzz.top&quot;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;&#125;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h2><ul><li><p>Vue有两种数据绑定的方式：</p><ol><li><p>单向绑定(v-bind)：数据只能从data流向页面</p></li><li><p>双向绑定(v-model)：数据不仅能从data流向页面，还可以从页面流向data  </p><blockquote><ol><li>双向绑定一般都应用在表单类元素上(如:input，select等)</li><li>v-model:value 可以简写为v-model,因为v-model默认收集的就是value值</li></ol></blockquote></li></ol></li><li><p><code>v-model</code>只能用在表单类元素(输入类元素)上   </p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        单向数据绑定:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-bind:value</span>=<span class="string">&quot;msg&quot;</span>&gt;</span></span><br><span class="line">        双向数据绑定:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model:value</span>=<span class="string">&quot;msg&quot;</span>&gt;</span></span><br><span class="line">    双向数据绑定:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;msg&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//创建Vue实例,得到 ViewModel</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">msg</span>:<span class="string">&quot;cez&quot;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;&#125;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="el与data的两种写法"><a href="#el与data的两种写法" class="headerlink" title="el与data的两种写法"></a>el与data的两种写法</h2><ul><li>el两种写法：<ul><li>new Vue的时候配置el属性</li><li>先创建Vue实例，随后通过.$mount()挂载</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123;name&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//el的两种写法</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//el: &#x27;#app&#x27;,   第一种写法</span></span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">name</span>:<span class="string">&#x27;cez&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;&#125;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript">    vm.$mount(<span class="string">&quot;#app&quot;</span>);  <span class="comment">//第二种写法 </span></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>data两种写法：</p><ul><li><p>对象式</p></li><li><p>函数式(写组件时必须用函数式)</p><blockquote><p> 由Vue管理的函数，一定不要写箭头函数，一旦写箭头函数，this就不再是Vue实例了</p></blockquote></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123;name&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="comment">//第一种写法</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// data: &#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//     name:&#x27;cez&#x27;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// &#125;,</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//第二种写法</span></span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="built_in">this</span>)<span class="comment">//此处的this是Vue实例对象</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">name</span>:<span class="string">&#x27;cez&#x27;</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;&#125;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="理解MVVM模型"><a href="#理解MVVM模型" class="headerlink" title="理解MVVM模型"></a>理解MVVM模型</h2><ul><li><p>MVVM:Model-View-ViewModel 是一种软件架构模式</p><ul><li>M：Model   对应data中的数据</li><li>V： 视图(View)   模板</li><li>VM：视图模式(ViewModel)    Vue实例对象</li></ul></li></ul><ul><li><p>data中所有的属性，最后都出现在了vm身上</p></li><li><p>vm身上所有的属性，及Vue原型上所有属性，在Vue模板中都可以直接使用 如<code>&#123;&#123;$options&#125;&#125;  &#123;&#123;$emit&#125;&#125;</code>均有结果出现。</p></li></ul><p>  <img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193734.png" alt="image-20210717001124214"></p><p>  <img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193735.png" alt="image-20210717001930625"></p><h2 id="Object-defineProperty"><a href="#Object-defineProperty" class="headerlink" title="Object.defineProperty"></a>Object.defineProperty</h2><ul><li><code>Object.defineProperty</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> number = <span class="number">18</span>; </span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> person = &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">name</span>:<span class="string">&#x27;cez&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">sex</span>:<span class="string">&quot;男&quot;</span>,</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">Object</span>.defineProperty(person,<span class="string">&#x27;age&#x27;</span>,&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// value:20,</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// enumerable:true,  //控制属性是否可以枚举，默认为false</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// writable:true,     //控制属性是否可以修改，默认为false</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// configurable:true, //控制属性是否可以删除，默认为false</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//当有人读取person的age属性时，get函数(getter)就会被调用，且返回值就是age的值</span></span></span><br><span class="line"><span class="javascript">        <span class="attr">get</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&quot;读取age属性&quot;</span>)</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> number;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//当有人修改person的age属性时，set函数(setter)就会被调用，且返回值就是修改的具体值</span></span></span><br><span class="line"><span class="javascript">        <span class="attr">set</span>:<span class="function"><span class="keyword">function</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&quot;修改了age属性,且值为&quot;</span>,value)</span></span><br><span class="line"><span class="javascript">            number = value</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(person.value);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="数据代理"><a href="#数据代理" class="headerlink" title="数据代理"></a>数据代理</h2><ul><li>数据代理：通过一个对象代理另一个对象中属性的操作(读/写)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> obj = &#123;<span class="attr">x</span>:<span class="number">100</span>&#125;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> obj2 = &#123;<span class="attr">y</span>:<span class="number">200</span>&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">Object</span>.defineProperty(obj2,<span class="string">&#x27;x&#x27;</span>,&#123;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">get</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> obj.x;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">set</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            obj.x = value</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193736.png" alt="image-20210717004356005"></p><h2 id="Vue中的数据代理"><a href="#Vue中的数据代理" class="headerlink" title="Vue中的数据代理"></a>Vue中的数据代理</h2><ul><li><p>Vue通过vm对象来代理data对象中属性的操作(读写)</p></li><li><p>Vue中数据代理的好处：更方便地操作data中的数据</p></li><li><p>基本原理：通过<code>Object.defineProperty()</code>把data对象中所有属性添加到vm上，为每一个添加到vm上的属性都指定一个getter/setter，在getter/setter内部去操作data中的属性</p><blockquote><p>在_data属性中做了数据劫持，这是为了能够做到响应式</p></blockquote></li></ul><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193737.png" alt="image-20210717004713044"></p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193738.png" alt="image-20210717005720993"></p><h2 id="template属性"><a href="#template属性" class="headerlink" title="template属性"></a>template属性</h2><p>一个字符串模板作为 Vue 实例的标识使用。模板将会<strong>替换</strong>挂载的元素。挂载元素的内容都将被忽略，除非模板的内容有分发插槽。</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193739.png" alt="image-20210719112015807"></p><h2 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h2><ol><li>使用<code>v-on:xxx</code>或<code>@xxx</code>绑定事件，其中xxx是事件名</li><li>事件的回调需要配置在methods对象中，最终会在vm上</li><li>methods中配置的函数，不要用箭头函数！否则this就不是vm了</li><li>methods中配置的函数都是被Vue管理的函数，this指向的是vm或组件实例对象</li><li><code>@click=&quot;demo&quot;</code>和<code>@click=&quot;demo($event)&quot;</code>效果一样，但后者可以传参</li></ol><ul><li><p>代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Hello,&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;showInfo1&quot;</span>&gt;</span>点我提示信息1(不传参)<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 如果传参时想要不丢失event，则使用$event传参即可 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo2(66,$event)&quot;</span>&gt;</span>点我提示信息2(传参)<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">name</span>:<span class="string">&#x27;cez&#x27;</span>  </span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showInfo1</span>(<span class="params">event</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//console.log(event.target.innerText)</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//console.log(this===vm)  true 此处的this就是Vue实例</span></span></span><br><span class="line"><span class="javascript">                alert(<span class="string">&quot;lxy1&quot;</span>);</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showInfo2</span>(<span class="params">number,a,b,c</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(number,a,b,c);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a>事件修饰符</h2><ol><li><p>prevent：阻止默认事件(常用)</p></li><li><p>stop：阻止事件冒泡(常用)</p><blockquote><p>事件冒泡 ：当一个元素接收到事件的时候 会把他接收到的事件传给自己的父级，一直到window (注意这里传递的仅仅是事件 并不传递所绑定的事件函数。所以如果父级没有绑定事件函数，就算传递了事件 也不会有什么表现 但事件确实传递了。)</p></blockquote></li><li><p>once：只触发一次(常用)</p></li><li><p>capture：使用事件的捕获模式(事件在捕获时就进行处理，而不是在冒泡时)</p><p>点击div2处，如果不用捕获模式，则先捕获div1，再捕获div2，然后从div2开始冒泡处理事件，所以依次输出2，1 </p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193740.png" alt="image-20210717082030517"></p></li><li><p>self：只有event.target是当前操作的元素时才触发事件</p></li><li><p>passive：事件的默认行为立即执行，无需等待事件回调执行完毕</p></li></ol><ul><li><p>代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        *&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#demo01</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: seagreen;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#box1</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>:<span class="number">5px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#box2</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>:<span class="number">5px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.list</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>:<span class="number">200px</span>;       </span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>:<span class="number">200px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>:orange;</span></span><br><span class="line"><span class="css">            <span class="attribute">overflow</span>: auto;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>:<span class="number">100px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 阻止默认事件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.cezzz.top&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 阻止事件冒泡 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo01&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.cezzz.top&quot;</span> @<span class="attr">click.stop</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 事件只触发一次 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.once</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!-- 使用事件捕获模式 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box1&quot;</span> @<span class="attr">click.capture</span>=<span class="string">&quot;showMsg(1)&quot;</span>&gt;</span></span><br><span class="line">            div1</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box2&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;showMsg(2)&quot;</span>&gt;</span>div2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- self:只有event.target是当前操作的元素时才触发事件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click.self</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 点击button时event.target就是这个button，所以div中的showInfo不会触发 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 事件的默认行为立即执行，无需等待事件回调执行完毕 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> @<span class="attr">wheel.passive</span>=<span class="string">&quot;demo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">                </span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">showInfo</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    alert(<span class="string">&quot;wuhu!&quot;</span>);</span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">showMsg</span>(<span class="params">msg</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(msg);</span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">demo</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">for</span> (<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;<span class="number">10000</span>;i++)&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(<span class="string">&#x27;#&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">&#x27;end.&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">        &#125;);</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h2><ul><li>Vue中常用的按键别名：<ul><li>回车：enter</li><li>删除：delete(捕获删除键和退格键)</li><li>退出：esc</li><li>空格：space</li><li>换行：tab(最好用keydown，因为keyup前已经切换焦点了)</li><li>上：up</li><li>下：down</li><li>左：left</li><li>右：right<ul><li>Vue未提供别名的按键，可以使用按键原始的key值去绑定，但注意要转为kebab-base(短横线命名)</li></ul></li></ul></li></ul><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193741.png" alt="image-20210717084012579"></p><p>​    </p><ul><li><p>系统修饰键(用法特殊):ctrl、alt、shift、meta</p><ul><li>配合keyup使用：按下修饰键的同时再按下其他键，随后释放其他键，事件才被触发</li><li>配合keydown使用：正常触发事件</li></ul></li><li><p>也可以使用keyCode去指定具体的按键(不推荐,已废弃)</p></li><li><p>Vue.config.keyCodes.自定义键名 = 键码，可以去定制按键别名</p></li><li><p>代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;按下回车提示输入&quot;</span> @<span class="attr">keyup</span>=<span class="string">&quot;showInfo&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 绑定CapsLock要符合短横线命名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;按下CapsLock提示输入&quot;</span> @<span class="attr">keyup.caps-lock</span>=<span class="string">&quot;showInfo&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    Vue.config.keyCodes.huiche=<span class="number">13</span>; <span class="comment">//不推荐使用</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showInfo</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(e.key,e.keyCode);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(e.target.value);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>事件的修饰符可以连写  如<code>@click.stop.prevent</code> </p></blockquote><h2 id="计算属性-姓名案例"><a href="#计算属性-姓名案例" class="headerlink" title="计算属性-姓名案例"></a>计算属性-姓名案例</h2><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193742.png" alt="image-20210717153820903"></p><ul><li><p>插值语法实现</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    姓<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span>/&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    名<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span>/&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    姓名:<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;firstName.slice(0,3)&#125;&#125;-&#123;&#123;lastName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">firstName</span>:<span class="string">&#x27;c&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">lastName</span>:<span class="string">&#x27;ez&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>methods实现</p><blockquote><p>只要data中的数据发生改变，那么Vue一定会重新解析模板</p><p>本例中只要data发生改变，fullName就会被调用</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    姓<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span>/&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    名<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span>/&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    姓名:<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName()&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    姓名:<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName()&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    姓名:<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName()&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    姓名:<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName()&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">firstName</span>:<span class="string">&#x27;c&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">lastName</span>:<span class="string">&#x27;ez&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">fullName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;方法被调用&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="built_in">this</span>.firstName+<span class="string">&#x27;-&#x27;</span>+<span class="built_in">this</span>.lastName;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h2><ul><li>定义：要用的属性不存在，要通过<strong>已有的属性</strong>计算得来</li><li>原理：底层借助了<code>Object.defineproperty</code>方法提供的getter和setter </li><li>优势： 与methods实现相比，内部有缓存机制(复用)，效率更高，调式方便</li><li>备注：<ul><li>计算属性最终会出现在vm上，直接读取使用即可</li><li>如果计算属性要被修改，必须写set函数去响应修改，且set中要引起计算时依赖的数据发生改变。</li></ul></li></ul><blockquote><p>计算属性不在vm._data中</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    姓<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span>/&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    名<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span>/&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    姓名:<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    姓名:<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    姓名:<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    姓名:<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">firstName</span>:<span class="string">&#x27;c&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">lastName</span>:<span class="string">&#x27;ez&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">computed</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">fullName</span>:&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//get的作用:当有人读取fullName时,get会被调用,且返回值就作为fullName的值</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//get中的this指向调整为vm对象</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//get什么时候会被调用:1.初次读取fullName时 2.所依赖的数据发生变化时</span></span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">get</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">&#x27;get被调用&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> <span class="built_in">this</span>.firstName+<span class="string">&#x27;-&#x27;</span>+<span class="built_in">this</span>.lastName;</span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript">                <span class="comment">//当fullName被修改时调用set方法</span></span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">set</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">&#x27;set&#x27;</span>+value);</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">const</span> arr = value.split(<span class="string">&#x27;-&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.firstName = arr[<span class="number">0</span>]</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.lastName = arr[<span class="number">1</span>]</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="计算属性简写"><a href="#计算属性简写" class="headerlink" title="计算属性简写"></a>计算属性简写</h2><p>只使用读取，不考虑修改时才可这样使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    姓<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span>/&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    名<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span>/&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    姓名:<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">firstName</span>:<span class="string">&#x27;c&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">lastName</span>:<span class="string">&#x27;ez&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">computed</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">fullName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;get被调用&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="built_in">this</span>.firstName+<span class="string">&#x27;-&#x27;</span>+<span class="built_in">this</span>.lastName;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="监听属性-天气案例"><a href="#监听属性-天气案例" class="headerlink" title="监听属性-天气案例"></a>监听属性-天气案例</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeWeather&quot;</span>&gt;</span>切换天气<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;button @click=&quot;isHot=!isHot&quot;&gt;切换天气&lt;/button&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">isHot</span>:<span class="literal">true</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">changeWeather</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.isHot = !<span class="built_in">this</span>.isHot</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">info</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="built_in">this</span>.isHot?<span class="string">&#x27;炎热&#x27;</span>:<span class="string">&#x27;凉爽&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="监视属性"><a href="#监视属性" class="headerlink" title="监视属性"></a>监视属性</h2><ul><li>监视属性watch：<ul><li>当被监视的属性变化时，回调函数自动调用，进行相关操作</li><li>监视的属性必须存在，才能进行监视</li><li>监视的两种写法<ul><li>new Vue时传入watch配置</li><li>通过vm.$watch监视</li></ul></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;isHot=!isHot&quot;</span>&gt;</span>切换天气<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">isHot</span>:<span class="literal">true</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">info</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="built_in">this</span>.isHot?<span class="string">&#x27;炎热&#x27;</span>:<span class="string">&#x27;凉爽&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="attr">watch</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//方式一</span></span></span><br><span class="line"><span class="javascript">            <span class="attr">isHot</span>:&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//初始化时让handler调用以下</span></span></span><br><span class="line"><span class="javascript">                <span class="attr">immediate</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">                <span class="comment">//当isHot发生改变时调用handler方法</span></span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">handler</span>(<span class="params">newValue,oldValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">&quot;new:&quot;</span>+newValue+<span class="string">&#x27;----&#x27;</span>+<span class="string">&quot;old:&quot;</span>+oldValue)</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="comment">//计算属性也可以被监视</span></span></span><br><span class="line"><span class="javascript">            <span class="attr">info</span>:&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//初始化时让handler调用以下</span></span></span><br><span class="line"><span class="javascript">                <span class="attr">immediate</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">                <span class="comment">//当isHot发生改变时调用handler方法</span></span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">handler</span>(<span class="params">newValue,oldValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">&quot;new:&quot;</span>+newValue+<span class="string">&#x27;----&#x27;</span>+<span class="string">&quot;old:&quot;</span>+oldValue)</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,  </span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//方式二</span></span></span><br><span class="line"><span class="javascript">    vm.$watch(<span class="string">&#x27;isHot&#x27;</span>,&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//初始化时让handler调用以下</span></span></span><br><span class="line"><span class="javascript">        <span class="attr">immediate</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">        <span class="comment">//当isHot发生改变时调用handler方法</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">handler</span>(<span class="params">newValue,oldValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&quot;new:&quot;</span>+newValue+<span class="string">&#x27;----&#x27;</span>+<span class="string">&quot;old:&quot;</span>+oldValue)</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="深度监视"><a href="#深度监视" class="headerlink" title="深度监视"></a>深度监视</h2><ul><li>Vue中的watch默认不监测对象内部值的改变(一层)</li><li>配置deep:true可以监测对象内部值的改变(多层)   <ul><li>如果不配置deep:true，遇到对象时，虽然内部值变化了，但是外部对象的地址并没有发生变化，所以不会触发handler</li></ul></li><li>Vue自身可以监测对象内部值的改变，但Vue提供的watch不可以</li><li>使用watch时根据数据的具体结构，决定是否采用深度监视</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>a的值是:&#123;&#123;numbers.a&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;numbers.a++&quot;</span>&gt;</span>点我让a+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>b的值是:&#123;&#123;numbers.b&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;numbers.b++&quot;</span>&gt;</span>点我让a+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">numbers</span>:&#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">a</span>:<span class="number">1</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">b</span>:<span class="number">1</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="attr">watch</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//监视多级结构中某个属性的变化</span></span></span><br><span class="line"><span class="javascript">            <span class="string">&#x27;numbers.a&#x27;</span>:&#123;</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">handler</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">&#x27;a改变了&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="comment">//监视多级结构中所有属性的变化</span></span></span><br><span class="line"><span class="javascript">            <span class="attr">numbers</span>:&#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">deep</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">immediate</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">handler</span>(<span class="params">newValue,oldValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">&quot;new:&quot;</span>+newValue+<span class="string">&#x27;----&#x27;</span>+<span class="string">&quot;old:&quot;</span>+oldValue)</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,  </span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="监视的简写形式"><a href="#监视的简写形式" class="headerlink" title="监视的简写形式"></a>监视的简写形式</h2><ul><li>当只需要handler，而不配置immediate和deep时，可以使用简写</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">watch: &#123;</span><br><span class="line">//简写</span><br><span class="line">isHot(newValue,oldValue)&#123;</span><br><span class="line">console.log(&quot;new:&quot;+newValue+&#x27;----&#x27;+&quot;old:&quot;+oldValue)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//简写  第二个参数不需要传配置对象，只需要传一个函数(注意不要用箭头函数)，该函数就相当于handler</span><br><span class="line">vm.$watch(&#x27;isHot&#x27;,function(newValue,oldValue)&#123;</span><br><span class="line">   console.log(&quot;new:&quot;+newValue+&#x27;----&#x27;+&quot;old:&quot;+oldValue);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="watch对比computed"><a href="#watch对比computed" class="headerlink" title="watch对比computed"></a>watch对比computed</h2><ul><li>computed和watch之间的区别：<ul><li>computed能完成的功能，watch都可以完成</li><li>watch能完成的功能，computed不一定能完成，例如：watch可以进行异步操作</li></ul></li><li>两个重要的小原则：<ul><li>所被Vue管理的函数，最好写成普通函数，这样this的指向才是vm或组件实例对象</li><li>所有不被Vue所管理的函数(定时器的回调函数，ajax的回调函数，Promise的回调函数等)，最好写成箭头函数，这样this的指向才是vm或组件实例对象(箭头函数没有this，需要向上找，这样就会找到vm或组件实例对象了，如果写普通函数，则它的this就是window了)</li></ul></li></ul><p>用watch写姓名案例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    姓<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span>/&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    名<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span>/&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    姓名:<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">firstName</span>:<span class="string">&#x27;c&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">lastName</span>:<span class="string">&#x27;ez&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">fullName</span>:<span class="string">&#x27;c-ez&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="attr">watch</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">firstName</span>(<span class="params">val</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//watch可以开启异步任务，一秒钟后更改全名</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.fullName = val + <span class="string">&#x27;-&#x27;</span> + <span class="built_in">this</span>.lastName;</span></span><br><span class="line"><span class="javascript">                &#125;,<span class="number">1000</span>);</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">lastName</span>(<span class="params">val</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.fullName = <span class="built_in">this</span>.firstName + <span class="string">&#x27;-&#x27;</span> + val;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="绑定class样式"><a href="#绑定class样式" class="headerlink" title="绑定class样式"></a>绑定class样式</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 绑定class样式 字符串写法，适用于：样式的类名不确定，需要动态指定 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;mood&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changeMood&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 绑定class样式 数组写法，适用于：要绑定样式的个数和名字均不确定 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;classArr&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 绑定class样式 对象写法，适用于：要绑定样式的个数和名字均确定,但是要动态决定是否使用 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;classObj&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">name</span>:<span class="string">&#x27;cez&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">mood</span>:<span class="string">&#x27;normal&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">classArr</span>:[<span class="string">&#x27;lxy1&#x27;</span>,<span class="string">&#x27;lxy2&#x27;</span>,<span class="string">&#x27;lxy3&#x27;</span>],</span></span><br><span class="line"><span class="javascript">            <span class="attr">classObj</span>:&#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">lxz1</span>:<span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">lxz2</span>:<span class="literal">true</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">changeMood</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">const</span> arr = [<span class="string">&#x27;happy&#x27;</span>,<span class="string">&#x27;sad&#x27;</span>,<span class="string">&#x27;normal&#x27;</span>]</span></span><br><span class="line"><span class="javascript">                <span class="keyword">const</span> index = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">3</span>)  <span class="comment">//Math.floor向下取整</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.mood = arr[index];</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193743.png" alt="image-20210717211503037"></p><h2 id="绑定style样式"><a href="#绑定style样式" class="headerlink" title="绑定style样式"></a>绑定style样式</h2><ul><li>style样式：<ul><li><code>:style=&quot;&#123;fontSize:xxx&#125;&quot;</code>，其中xxx是动态值</li><li><code>:style=&quot;&#123;a,b&#125;&quot;</code>，其中a,b是样式对象</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;fontSize:fsize+&#x27;px&#x27;&#125;&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;styleObj&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 数组写法 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;[styleObj,styleObj2]&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 数组写法 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;styleArr&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">name</span>:<span class="string">&#x27;cez&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">fsize</span>:<span class="number">40</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">styleObj</span>:&#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">fontSize</span>:<span class="string">&#x27;60px&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">backgroundColor</span>:<span class="string">&#x27;green&#x27;</span></span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">styleObj2</span>:&#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">height</span>:<span class="string">&#x27;50px&#x27;</span></span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">styleArr</span>:[</span></span><br><span class="line"><span class="javascript">                &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="attr">fontSize</span>:<span class="string">&#x27;60px&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">backgroundColor</span>:<span class="string">&#x27;green&#x27;</span></span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript">                &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="attr">height</span>:<span class="string">&#x27;50px&#x27;</span></span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            ]</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h2><ul><li><code>v-if</code><ul><li><code>v-if=&quot;表达式&quot;</code></li><li><code>v-else-if=&quot;表达式&quot;</code></li><li><code>v-else=&quot;表达式&quot;</code> </li><li>适用于切换频率较低的场景</li><li>特点：不展示的DOM元素直接被移除</li><li>注意：<code>v-if和v-else-if、v-else</code>一起使用，但要求结构不能被打断</li></ul></li></ul><ul><li><code>v-show</code><ul><li><code>v-show=&quot;表达式&quot;</code></li><li>适用于切换频率较高的场景<ul><li>特点：不展示的DOM元素未被移除，仅仅是使用样式隐藏掉(<code>display:none</code>)</li></ul></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前的n值为&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 使用v-show条件渲染 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-show</span>=<span class="string">&quot;false&quot;</span>&gt;</span>hello1,&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-show</span>=<span class="string">&quot;1===1&quot;</span>&gt;</span>hello2,&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 使用v-if条件渲染 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;false&quot;</span>&gt;</span>hello1,&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;1===1&quot;</span>&gt;</span>hello2,&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- v-else和v-else-if和v-else,中间不可以中断 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;n===1&quot;</span>&gt;</span>Angular<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;n===2&quot;</span>&gt;</span>React<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 中断 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;div&gt;中断&lt;/div&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;n===3&quot;</span>&gt;</span>Vue<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span>Other...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- v-if与template的配合使用 template不会破坏结构 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;n===1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>lxy<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>js<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">name</span>:<span class="string">&#x27;cez&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">n</span>:<span class="number">0</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193744.png" alt="image-20210717224325341"></p><h2 id="列表渲染"><a href="#列表渲染" class="headerlink" title="列表渲染"></a>列表渲染</h2><p><code>v-for指令</code></p><ul><li>用于展示列表数据</li><li>语法：<code>v-for=&quot;(item,index) in xxx&quot; :key=&quot;yyy&quot;</code></li><li>可遍历：数组、对象、字符串(很少)、指定次数(很少)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 遍历数组 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;p in persons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;p.id&quot;</span>&gt;</span>&#123;&#123;p.name&#125;&#125;--&#123;&#123;p.age&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p,index) in persons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span>&#123;&#123;index&#125;&#125;--&#123;&#123;p.name&#125;&#125;--&#123;&#123;p.age&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 遍历对象 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>汽车信息<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(value,key) in car&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;key&quot;</span>&gt;</span>&#123;&#123;key&#125;&#125;--&#123;&#123;value&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 遍历字符串 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>字符串<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(c,k) in str&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;k&quot;</span>&gt;</span>&#123;&#123;c&#125;&#125;--&#123;&#123;k&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 遍历指定次数 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(a,b) in 5&quot;</span>&gt;</span>&#123;&#123;a&#125;&#125;--&#123;&#123;b&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">persons</span>:[</span></span><br><span class="line"><span class="javascript">                &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">age</span>:<span class="number">18</span></span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript">                &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">name</span>:<span class="string">&#x27;李四&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">age</span>:<span class="number">19</span></span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript">                &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">name</span>:<span class="string">&#x27;王五&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">age</span>:<span class="number">20</span></span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript">            ],</span></span><br><span class="line"><span class="javascript">            <span class="attr">car</span>:&#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">name</span>:<span class="string">&#x27;奥迪A8&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">price</span>:<span class="string">&#x27;70W&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">color</span>:<span class="string">&#x27;black&#x27;</span></span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">str</span>:<span class="string">&#x27;test&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="key作用和原理"><a href="#key作用和原理" class="headerlink" title="key作用和原理"></a>key作用和原理</h2><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193745.png" alt="image-20210717233819817"></p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193746.png" alt="image-20210717234108316"></p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193747.png" alt="image-20210717234346349"></p><h2 id="列表过滤"><a href="#列表过滤" class="headerlink" title="列表过滤"></a>列表过滤</h2><ul><li><p>用watch实现</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 遍历数组 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;keyWord&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入姓名&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;p in filPersons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;p.id&quot;</span>&gt;</span>&#123;&#123;p.name&#125;&#125;--&#123;&#123;p.age&#125;&#125;--&#123;&#123;p.sex&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">keyWord</span>:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">persons</span>:[</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;马冬梅&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周冬雨&#x27;</span>,<span class="attr">age</span>:<span class="number">19</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周杰伦&#x27;</span>,<span class="attr">age</span>:<span class="number">20</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>:<span class="string">&#x27;004&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;温兆伦&#x27;</span>,<span class="attr">age</span>:<span class="number">20</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">            ],</span></span><br><span class="line"><span class="javascript">            <span class="attr">filPersons</span>:[]</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">watch</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">keyWord</span>:&#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">immediate</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">handler</span>(<span class="params">val</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//filter会返回一个全新的数组</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//任意一个字符串.indexOf(&#x27;&#x27;)结果都为0</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.filPersons = <span class="built_in">this</span>.persons.filter(<span class="function">(<span class="params">p</span>)=&gt;</span>&#123; </span></span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> p.name.indexOf(val)!==-<span class="number">1</span></span></span><br><span class="line"><span class="javascript">                    &#125;)                 </span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>用computed实现</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">computed:&#123;</span><br><span class="line">    <span class="function"><span class="title">filPersons</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.persons.filter(<span class="function">(<span class="params">p</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> p.name.indexOf(<span class="built_in">this</span>.keyWord)!==-<span class="number">1</span>;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="列表排序"><a href="#列表排序" class="headerlink" title="列表排序"></a>列表排序</h2><ul><li><p>先序知识：JavaScript  Array.sort()方法</p><ul><li><p>如果调用该方法时没有使用参数，将按字母顺序对数组中的元素进行排序，说得更精确点，是<strong>按照字符编码</strong>的顺序进行排序。要实现这一点，首先应把数组的元素都转换成字符串（如有必要），以便进行比较。</p></li><li><p>如果想按照其他标准进行排序，就需要提供比较函数，该函数要比较两个值，<strong>然后返回一个用于说明这两个值的相对顺序的数字</strong>。比较函数应该具有两个参数 a 和 b，其返回值如下：</p></li><li><p><strong>若 a 小于 b，在排序后的数组中 a 应该出现在 b 之前，则返回一个小于 0 的值。</strong></p></li><li>若 a 等于 b，则返回 0。</li><li>若 a 大于 b，则返回一个大于 0 的值。</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 遍历数组 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;keyWord&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入姓名&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sortType=2&quot;</span>&gt;</span>年龄升序<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sortType=1&quot;</span>&gt;</span>年龄降序<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sortType=0&quot;</span>&gt;</span>原顺序<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;p in filPersons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;p.id&quot;</span>&gt;</span>&#123;&#123;p.name&#125;&#125;--&#123;&#123;p.age&#125;&#125;--&#123;&#123;p.sex&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">keyWord</span>:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">sortType</span>:<span class="number">0</span>,<span class="comment">//0代表原数据，1代表降序  2代表升序</span></span></span><br><span class="line"><span class="javascript">            <span class="attr">persons</span>:[</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;马冬梅&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周冬雨&#x27;</span>,<span class="attr">age</span>:<span class="number">30</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周杰伦&#x27;</span>,<span class="attr">age</span>:<span class="number">40</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>:<span class="string">&#x27;004&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;温兆伦&#x27;</span>,<span class="attr">age</span>:<span class="number">25</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">            ],</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">computed</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">filPersons</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">const</span> arr = <span class="built_in">this</span>.persons.filter(<span class="function">(<span class="params">p</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> p.name.indexOf(<span class="built_in">this</span>.keyWord)!==-<span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">                &#125;);</span></span><br><span class="line"><span class="javascript">                <span class="comment">//判断是否需要排序</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="built_in">this</span>.sortType)&#123;</span></span><br><span class="line"><span class="javascript">                    arr.sort(<span class="function">(<span class="params">p1,p2</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> <span class="built_in">this</span>.sortType===<span class="number">1</span>?p2.age-p1.age:p1.age-p2.age;</span></span><br><span class="line"><span class="javascript">                    &#125;)</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> arr;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="更新时的一个问题"><a href="#更新时的一个问题" class="headerlink" title="更新时的一个问题"></a>更新时的一个问题</h2><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193748.png" alt="image-20210718094931281"></p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193749.png" alt="image-20210718094959540"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 遍历数组 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;keyWord&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入姓名&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;updateMei&quot;</span>&gt;</span>更新马冬梅的信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;p in persons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;p.id&quot;</span>&gt;</span>&#123;&#123;p.name&#125;&#125;--&#123;&#123;p.age&#125;&#125;--&#123;&#123;p.sex&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">keyWord</span>:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">sortType</span>:<span class="number">0</span>,<span class="comment">//0代表原数据，1代表降序  2代表升序</span></span></span><br><span class="line"><span class="javascript">            <span class="attr">persons</span>:[</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;马冬梅&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周冬雨&#x27;</span>,<span class="attr">age</span>:<span class="number">30</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周杰伦&#x27;</span>,<span class="attr">age</span>:<span class="number">40</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>:<span class="string">&#x27;004&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;温兆伦&#x27;</span>,<span class="attr">age</span>:<span class="number">25</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">            ],</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">updateMei</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// this.persons[0].name=&quot;韩金轮&quot;  //奏效</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// this.persons[0].age=30  //奏效</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.persons[<span class="number">0</span>] = &#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;韩金轮&#x27;</span>,<span class="attr">age</span>:<span class="number">30</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125; <span class="comment">//不奏效</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Vue监测数据的原理-对象"><a href="#Vue监测数据的原理-对象" class="headerlink" title="Vue监测数据的原理_对象"></a>Vue监测数据的原理_对象</h2><ul><li><p>模拟数据监测—setInterval()</p><p>setInterval() 方法可按照指定的周期（以毫秒计）来调用函数或计算表达式。    </p><p>setInterval() 方法会不停地调用函数，直到 <a href="https://www.runoob.com/jsref/met-win-clearinterval.html">clearInterval()</a> 被调用或窗口被关闭。由 setInterval() 返回的 ID 值可用作 clearInterval() 方法的参数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">let</span> data = &#123;</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&#x27;cez&#x27;</span>,</span><br><span class="line">        <span class="attr">address</span>:<span class="string">&#x27;hitwh&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> tmp = <span class="string">&#x27;cez&#x27;</span></span><br><span class="line">    <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (data.name!=tmp)&#123;</span><br><span class="line">            tmp = data.name</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;name被修改了&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="number">100</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p>这里如果不使用tmp变量而是在判断中直接写data.name!=’cez’，则改变data.name，每隔100ms就会调用方法</p></blockquote></li><li><p>模拟数据监测—<code>Object.defineProperty()</code>   不可行</p><ul><li><p>直接在data中defineProperty会造成get和set的无限递归调用自身。</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193750.png" alt="image-20210718100042415"></p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">let</span> data = &#123;</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&#x27;cez&#x27;</span>,</span><br><span class="line">        <span class="attr">address</span>:<span class="string">&#x27;hitwh&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">Object</span>.defineProperty(data,<span class="string">&#x27;name&#x27;</span>,&#123;</span><br><span class="line">        <span class="function"><span class="title">get</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> data.name</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="function"><span class="title">set</span>(<span class="params">val</span>)</span>&#123;</span><br><span class="line">            data.name = val</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>Observer</p><p>这里仅仅模拟了一层，在Vue中更加完善，只要是对象，不管有几层都可以监视</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> data = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;cez&#x27;</span>,</span><br><span class="line">    <span class="attr">address</span>:<span class="string">&#x27;hitwh&#x27;</span></span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个监视的实例对象，用于监视data中属性的变化</span></span><br><span class="line"><span class="keyword">const</span> obs = <span class="keyword">new</span> Observer(data)</span><br><span class="line"><span class="built_in">console</span>.log(obs)</span><br><span class="line"></span><br><span class="line"><span class="comment">//准备一个vm实例对象</span></span><br><span class="line"><span class="keyword">let</span> vm = &#123;&#125;</span><br><span class="line">vm._data = data = obs</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Observer</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//汇总对象中所有的属性形成一个数组</span></span><br><span class="line">    <span class="keyword">const</span> keys = <span class="built_in">Object</span>.keys(obj)</span><br><span class="line">    <span class="comment">//遍历</span></span><br><span class="line">    keys.forEach(<span class="function">(<span class="params">k</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">//这里的this就是Observer的实例对象</span></span><br><span class="line">        <span class="built_in">Object</span>.defineProperty(<span class="built_in">this</span>,k,&#123;</span><br><span class="line">            <span class="function"><span class="title">get</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> obj[k]</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="function"><span class="title">set</span>(<span class="params">val</span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;$&#123;k&#125;被修改了,我要去解析模板,生成虚拟DOM.....开始干活&#x27;</span>)</span><br><span class="line">                obj[k] = val</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)    </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Vue-set"><a href="#Vue-set" class="headerlink" title="Vue.set()"></a>Vue.set()</h2><p><code>[Vue.set( target, propertyName/index, value )]</code></p><ul><li><p><strong>参数</strong>：</p><ul><li><code>&#123;Object | Array&#125; target</code></li><li><code>&#123;string | number&#125; propertyName/index</code></li><li><code>&#123;any&#125; value</code></li></ul></li><li><p><strong>返回值</strong>：设置的值。</p></li><li><p><strong>用法</strong>：</p><p>向响应式对象中添加一个 property，并确保这个新 property 同样是响应式的，且触发视图更新。它必须用于向响应式对象上添加新 property，因为 Vue 无法探测普通的新增 property (比如 <code>this.myObject.newProperty = &#39;hi&#39;</code>)</p><p><strong>注意对象不能是 Vue 实例，或者 Vue 实例的根数据对象。</strong></p></li></ul><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193751.png" alt="image-20210718103753909"></p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193752.png" alt="image-20210718103811958"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名称:&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址:&#123;&#123;address&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>学生信息<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addSex&quot;</span>&gt;</span>添加性别属性,默认为男<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学生姓名:&#123;&#123;student.name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学生年龄:真实&#123;&#123;student.age.rAge&#125;&#125;--虚假&#123;&#123;student.age.sAge&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;student.sex&quot;</span>&gt;</span>学生性别:&#123;&#123;student.sex&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>朋友<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(f,index) in student.friends&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span>&#123;&#123;f.name&#125;&#125;--&#123;&#123;f.age&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">name</span>:<span class="string">&#x27;hitwh&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">address</span>:<span class="string">&#x27;wh&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">student</span>:&#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">name</span>:<span class="string">&#x27;cez&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">age</span>:&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="attr">rAge</span>:<span class="number">20</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">sAge</span>:<span class="number">18</span></span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript">                <span class="attr">friends</span>:[</span></span><br><span class="line"><span class="javascript">                    &#123;<span class="attr">name</span>:<span class="string">&#x27;lxy&#x27;</span>,<span class="attr">age</span>:<span class="number">20</span>&#125;,</span></span><br><span class="line"><span class="javascript">                    &#123;<span class="attr">name</span>:<span class="string">&#x27;lxz&#x27;</span>,<span class="attr">age</span>:<span class="number">19</span>&#125;</span></span><br><span class="line"><span class="javascript">                ]</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">addSex</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//this.$set(this.student,&#x27;sex&#x27;,&#x27;男&#x27;);</span></span></span><br><span class="line"><span class="javascript">                Vue.set(<span class="built_in">this</span>.student,<span class="string">&#x27;sex&#x27;</span>,<span class="string">&#x27;男&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Vue监测数据的原理-数组"><a href="#Vue监测数据的原理-数组" class="headerlink" title="Vue监测数据的原理_数组"></a>Vue监测数据的原理_数组</h2><ul><li><p>前序知识:JavaScript splice()方法</p><ul><li><p>定义和用法</p><p>splice() 方法向/从数组中添加/删除项目，然后返回被删除的项目。</p><blockquote><p>该方法会改变原始数组。</p></blockquote></li></ul><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193753.png" alt="image-20210718105601009"></p></li></ul><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193754.png" alt="image-20210718105930216"></p><ul><li>vm将上面变更数组的7个方法进行了包裹</li></ul><p>​    <img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193755.png" alt="image-20210718110126403"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名称:&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址:&#123;&#123;address&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>学生信息<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addSex&quot;</span>&gt;</span>添加性别属性,默认为男<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学生姓名:&#123;&#123;student.name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学生年龄:真实&#123;&#123;student.age.rAge&#125;&#125;--虚假&#123;&#123;student.age.sAge&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;student.sex&quot;</span>&gt;</span>学生性别:&#123;&#123;student.sex&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>爱好<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(hobby,index) in student.hobbies&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123;hobby&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>朋友<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(f,index) in student.friends&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span>&#123;&#123;f.name&#125;&#125;--&#123;&#123;f.age&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">name</span>:<span class="string">&#x27;hitwh&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">address</span>:<span class="string">&#x27;wh&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">student</span>:&#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">name</span>:<span class="string">&#x27;cez&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">age</span>:&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="attr">rAge</span>:<span class="number">20</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">sAge</span>:<span class="number">18</span></span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript">                <span class="attr">hobbies</span>:[<span class="string">&#x27;抽烟&#x27;</span>,<span class="string">&#x27;喝酒&#x27;</span>,<span class="string">&#x27;烫头&#x27;</span>],</span></span><br><span class="line"><span class="javascript">                <span class="attr">friends</span>:[</span></span><br><span class="line"><span class="javascript">                    &#123;<span class="attr">name</span>:<span class="string">&#x27;lxy&#x27;</span>,<span class="attr">age</span>:<span class="number">20</span>&#125;,</span></span><br><span class="line"><span class="javascript">                    &#123;<span class="attr">name</span>:<span class="string">&#x27;lxz&#x27;</span>,<span class="attr">age</span>:<span class="number">19</span>&#125;</span></span><br><span class="line"><span class="javascript">                ]</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">addSex</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//this.$set(this.student,&#x27;sex&#x27;,&#x27;男&#x27;);</span></span></span><br><span class="line"><span class="javascript">                Vue.set(<span class="built_in">this</span>.student,<span class="string">&#x27;sex&#x27;</span>,<span class="string">&#x27;男&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Vue监测数据总结"><a href="#Vue监测数据总结" class="headerlink" title="Vue监测数据总结"></a>Vue监测数据总结</h2><ol><li><p>Vue会监视data中所有层次的数据</p></li><li><p>如何监测对象中的数据</p><p>通过setter实现监视，且要在new Vue的时候就传入要监测的数据</p><ul><li><p>对象中后追加的属性，Vue默认不做响应式处理</p></li><li><p>如需给后添加的属性做响应式，使用如下API：</p><p><code>Vue.set(target,propertyName/index,value)</code>或</p><p><code>vm.$set(target,propertyName/index,value)</code></p></li></ul></li><li><p>如何监测数组中的数据</p><p>通过包裹数组更新元素的方法实现，本质就是做了两件事</p><ul><li>调用原生对应的方法对数组进行更新</li><li>重新解析模板，进而更新页面</li></ul></li><li><p>在Vue中修改数组中国的某个元素一定要使用如下方法：</p><p><code>push()  pop()  shift()  unshift()  splice()  sort()  reverse()</code></p><p><code>Vue.set()  vm.$set()</code></p></li></ol><h2 id="收集表单数据"><a href="#收集表单数据" class="headerlink" title="收集表单数据"></a>收集表单数据</h2><ul><li>若<code>&lt;input type=&quot;text&quot;/&gt;</code>,则v-model收集的是value值，用户输入的就是value值</li><li>若<code>&lt;input type=&quot;radio&quot;/&gt;</code>，则v-model收集的就是value值，且要给标签配置value值</li><li>若<code>&lt;input type=&quot;checkbox&quot;/&gt;</code> <ul><li>没有配置input的value属性，那么收集的就是checked(勾选or未勾选，bool值)</li><li>若配置了input的value属性：<ul><li>v-model的初始值为非数组，那么收集的是checked</li><li>v-model的初始值为数组，那么收集的就是value组成的数组</li></ul></li></ul></li><li>备注：v-model三大修饰符：<ul><li>lazy:失去焦点时再收集数据</li><li>number：输入字符串转为有效的数字</li><li>itrm：输入首尾空格过滤</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> @<span class="attr">submit.prevent</span>=<span class="string">&quot;demo&quot;</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        账号：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model.trim</span>=<span class="string">&quot;userInfo.account&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.password&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">v-model.number</span>=<span class="string">&quot;userInfo.age&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        性别：</span><br><span class="line">        男<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.sex&quot;</span>&gt;</span> </span><br><span class="line">        女<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.sex&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        爱好:</span><br><span class="line">        学习<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;study&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.hobby&quot;</span>&gt;</span> </span><br><span class="line">        打游戏<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;game&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.hobby&quot;</span>&gt;</span> </span><br><span class="line">        吃饭<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;eat&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.hobby&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        所属校区:</span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.city&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>请选择校区<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;harbin&quot;</span>&gt;</span>哈尔滨<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;weihai&quot;</span>&gt;</span>威海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;shenzhen&quot;</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        其他信息：</span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model.lazy</span>=<span class="string">&quot;userInfo.others&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.agree&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.cezzz.top&quot;</span>&gt;</span>《用户信息》<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">userInfo</span>:&#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">account</span>:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">password</span>:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">age</span>:<span class="number">18</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">sex</span>:<span class="string">&#x27;female&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">hobby</span>:[],</span></span><br><span class="line"><span class="javascript">                <span class="attr">city</span>:<span class="string">&#x27;weihai&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">others</span>:<span class="string">&#x27;无&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">agree</span>:<span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">demo</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(<span class="built_in">this</span>.userInfo));</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><ul><li>定义：对要显示的数据进行特定格式化后再显示(适用于一些简单逻辑的处理)</li><li>语法：<ul><li>注册处理器:<code>Vue.filter(name,callback)</code>或<code>new Vue&#123;filters:&#123;&#125;&#125;</code></li></ul></li><li>备注<ul><li>过滤器也可以接收额外参数，多个过滤器也可以串联</li><li>并没有改变原本的数据，是产生新的对应的数据</li></ul></li><li>用法：<ul><li>过滤器可以作用在插值语法和v-bind</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>显示格式化后的时间<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 计算属性实现 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>现在是:&#123;&#123;fmtTime&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- methods实现 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>现在是:&#123;&#123;getFmtTime()&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 过滤器实现 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>现在是:&#123;&#123;time | timeFormater(&#x27;YYYY_MM_DD&#x27;) | mySlice &#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 过滤器可以作用在v-bind上 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span> <span class="attr">:x</span>=<span class="string">&quot;msg | mySlice&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 过滤器不可作用在v-model上 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;msg | mySlice&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>现在是:&#123;&#123;time | mySlice &#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//注册全局过滤器</span></span></span><br><span class="line"><span class="javascript">    Vue.filter(<span class="string">&#x27;mySlice&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> value.slice(<span class="number">0</span>,<span class="number">4</span>)</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">time</span>:<span class="number">1626589191242</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">msg</span>:<span class="string">&#x27;hello,cez&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">fmtTime</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> dayjs(<span class="built_in">this</span>.time).format(<span class="string">&#x27;YYYY年MM月DD HH:mm:ss&#x27;</span>)</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">getFmtTime</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> dayjs(<span class="built_in">this</span>.time).format(<span class="string">&#x27;YYYY年MM月DD HH:mm:ss&#x27;</span>)</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">filters</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">timeFormater</span>(<span class="params">val,formatStr=<span class="string">&#x27;YYYY年MM月DD HH:mm:ss&#x27;</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> dayjs(val).format(formatStr)</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm2 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>:<span class="string">&#x27;#app2&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">time</span>:<span class="number">1626589191242</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-text指令"><a href="#v-text指令" class="headerlink" title="v-text指令"></a>v-text指令</h2><ul><li>向其所在的节点中渲染文本内容</li><li>与插值语法的区别：v-text会替换掉节点中的内容,则不会</li></ul><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193756.png" alt="image-20210718145110347"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-text</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">name</span>:<span class="string">&#x27;cez&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>v-text会替换开闭标签之间的内容，所以推荐使用插值语法，更加灵活。</p></blockquote><h2 id="v-html指令"><a href="#v-html指令" class="headerlink" title="v-html指令"></a>v-html指令</h2><ul><li>作用：向指定结点中渲染包含html结构的内容</li><li>与插值语法的区别：<ul><li>v-html会替换掉节点中所有的内容，则不会</li><li>v-html可以识别html结构</li></ul></li><li>严重注意：v-html有安全性问题<ul><li>在网站上动态渲染任意HTML是非常危险的，容易导致XSS攻击</li><li>一定要在可信的内容上使用v-html，永远不要用在用户提交的内容上</li></ul></li></ul><ul><li><p>cookie</p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193757.png" alt="image-20210718152450091"></p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193758.png" alt="image-20210718152622962"></p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193759.png" alt="image-20210718152750766"></p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-html</span>=<span class="string">&quot;str&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-html</span>=<span class="string">&quot;str2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="handlebars"><span class="xml"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    var vm = new Vue(&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        el: &#x27;#app&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        data: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            str:&#x27;<span class="tag">&lt;<span class="name">h3</span>&gt;</span>Hello,Cez<span class="tag">&lt;/<span class="name">h3</span>&gt;</span>&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            str2:&#x27;<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">javascript:location.href</span>=<span class="string">&quot;http://www.cezzz.top?&quot;</span>+<span class="attr">document.cookie</span>&gt;</span>找到你要的资源了，快点击!!!<span class="tag">&lt;/<span class="name">a</span>&gt;</span>&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        methods: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-cloak指令"><a href="#v-cloak指令" class="headerlink" title="v-cloak指令"></a>v-cloak指令</h2><ul><li>v-cloak指令(没有值)：<ul><li>本质是一个特殊属性，Vue实例创建完毕并接管容器后，会删掉v-cloak属性</li><li>使用css配合v-cloak可以解决网速慢时页面展示出的问题，当Vue接管时会自动删除v-cloak</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 选中所有标签中含v-cloak属性的元素 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-attr">[v-cloak]</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>:none;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-cloak</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">name</span>:<span class="string">&#x27;cez&#x27;</span></span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            </span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">        &#125;);</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-once指令"><a href="#v-once指令" class="headerlink" title="v-once指令"></a>v-once指令</h2><ul><li>v-once所在节点在初次动态渲染后，就视为静态内容了</li><li>以后数据的改变不会引起v-once所在结构的更新，可以用于优化性能</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-once</span>&gt;</span>初始化的n值为:&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前的n值为:&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">n</span>:<span class="number">1</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-pre指令"><a href="#v-pre指令" class="headerlink" title="v-pre指令"></a>v-pre指令</h2><ul><li>跳过其所在节点的编译过程</li><li>可以利用它跳过：没有使用指令语法、没有使用插值语法的节点，会加快编译</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-pre</span>&gt;</span>Learn Vue!<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前的n值为:&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">n</span>:<span class="number">1</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="自定义指令"><a href="#自定义指令" class="headerlink" title="自定义指令"></a>自定义指令</h2><p>—-暂略—-</p><h2 id="引出生命周期"><a href="#引出生命周期" class="headerlink" title="引出生命周期"></a>引出生命周期</h2><ul><li>生命周期<ul><li>又名：生命周期回调函数、生命周期函数、生命周期钩子</li><li>是什么：Vue在关键时刻帮我们调用的一些特殊函数的名称</li><li>生命周期函数的名字不可更改，但函数的具体内容是程序员根据需求编写的</li><li>生命周期函数中的this指向是vm或组件实例对象</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 简写opacity:opacity 同名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;opacity&#125;&quot;</span>&gt;</span>欢迎学习Vue<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">opacity</span>:<span class="number">1</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="comment">//Vue完成模板的解析,并把初始的真实DOM元素放入页面后(挂载完毕)调用mounted</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;mounted&#x27;</span>,<span class="built_in">this</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">setInterval</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.opacity-=<span class="number">0.01</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="built_in">this</span>.opacity&lt;=<span class="number">0</span>) </span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.opacity = <span class="number">1</span></span></span><br><span class="line"><span class="javascript">            &#125;,<span class="number">16</span>)</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 通过外部的定时器实现(不推荐)</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// setInterval(()=&gt;&#123;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//     vm.opacity -= 0.01</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//     if (vm.opacity&lt;=0) </span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//         vm.opacity=1;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// &#125;,16);</span></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="生命周期挂载流程"><a href="#生命周期挂载流程" class="headerlink" title="生命周期挂载流程"></a>生命周期挂载流程</h2><ul><li>Vue完整生命周期：</li></ul><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193800.png" alt=""></p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193801.png" alt="image-20210718173317473"></p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193802.png" alt="image-20210718173459988"></p><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193803.png" alt="image-20210718173511963"></p><ul><li>vm.$el可以用于比较算法，便于复用等</li></ul><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193804.png" alt="image-20210718173555864"></p><h2 id="更新流程"><a href="#更新流程" class="headerlink" title="更新流程"></a>更新流程</h2><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193805.png" alt="image-20210718180347373"></p><h2 id="销毁流程"><a href="#销毁流程" class="headerlink" title="销毁流程"></a>销毁流程</h2><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193806.png" alt="image-20210718180703191"></p><ul><li><p><code>vm.$destroy()</code></p><ul><li><p><strong>用法</strong>：</p><p>完全销毁一个实例。清理它与其它实例的连接，解绑它的全部指令及事件监听器。</p><p>触发 <code>beforeDestroy</code> 和 <code>destroyed</code> 的钩子。</p></li></ul><blockquote><p>在大多数场景中你不应该调用这个方法。最好使用 <code>v-if</code> 和 <code>v-for</code> 指令以数据驱动的方式控制子组件的生命周期。</p></blockquote></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前的n值为:&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;bye&quot;</span>&gt;</span>点我销毁vm<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">n</span>:<span class="number">1</span></span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">bye</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">&#x27;byebye&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.$destroy();</span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">add</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.n++;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">beforeCreate</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;beforeCreate&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">debugger</span>;    </span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">created</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;created&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">debugger</span>;</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">beforeMount</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;beforeMount&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.querySelector(<span class="string">&#x27;h2&#x27;</span>).innerText=<span class="string">&#x27;beforeMount&#x27;</span>;   </span></span><br><span class="line"><span class="javascript">                <span class="keyword">debugger</span>;</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;mounted&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">debugger</span>;</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">beforeUpdate</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;beforeUpdate&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.n)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">debugger</span>;</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">updated</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;updated&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.n)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">debugger</span>;</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">beforeDestroy</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;beforeDestroy&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.n)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">                <span class="comment">//虽然this.n+1了，但是因为已经进入了destroy的流程了，所以不会更新View</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.add();</span></span><br><span class="line"><span class="javascript">                <span class="keyword">debugger</span>;</span></span><br><span class="line"><span class="javascript">            &#125;,  </span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">destroyed</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;destroy&#x27;</span>)</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">        &#125;);</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="生命周期总结"><a href="#生命周期总结" class="headerlink" title="生命周期总结"></a>生命周期总结</h2><ul><li>beforeCreate和created指的是数据监测和数据代理的create，而不是vm对象</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 简写opacity:opacity 同名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;opacity&#125;&quot;</span>&gt;</span>欢迎学习Vue<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;stop&quot;</span>&gt;</span>点我停止变换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">opacity</span>:<span class="number">1</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">stop</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$destroy();</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;mounted&#x27;</span>,<span class="built_in">this</span>);</span></span><br><span class="line"><span class="javascript">            <span class="comment">//返回值相当于这个计时器的id</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.timer = <span class="built_in">setInterval</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.opacity-=<span class="number">0.01</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="built_in">this</span>.opacity&lt;=<span class="number">0</span>) </span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.opacity = <span class="number">1</span></span></span><br><span class="line"><span class="javascript">            &#125;,<span class="number">16</span>)</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">beforeDestroy</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;vm要寄咯!&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">clearInterval</span>(<span class="built_in">this</span>.timer);</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Cezzz/image2_repo/raw/master/img/20211021193807.png" alt="image-20210719004520140"></p>]]></content>
    
    
    <summary type="html">本笔记内容为课设时学习Vue所记录，本意供以后用到时翻阅使用，内容基于B站尚硅谷张天禹老师，讲课内容深入浅出，有原理有实践，建议同学们如果想深入学习的话可以去看看。</summary>
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
</feed>
